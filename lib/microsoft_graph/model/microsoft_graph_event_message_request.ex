# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphEventMessageRequest do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :categories,
    :changeKey,
    :createdDateTime,
    :lastModifiedDateTime,
    :attachments,
    :bccRecipients,
    :body,
    :bodyPreview,
    :ccRecipients,
    :conversationId,
    :conversationIndex,
    :extensions,
    :flag,
    :from,
    :hasAttachments,
    :importance,
    :inferenceClassification,
    :internetMessageHeaders,
    :internetMessageId,
    :isDeliveryReceiptRequested,
    :isDraft,
    :isRead,
    :isReadReceiptRequested,
    :multiValueExtendedProperties,
    :parentFolderId,
    :receivedDateTime,
    :replyTo,
    :sender,
    :sentDateTime,
    :singleValueExtendedProperties,
    :subject,
    :toRecipients,
    :uniqueBody,
    :webLink,
    :endDateTime,
    :event,
    :isAllDay,
    :isDelegated,
    :isOutOfDate,
    :location,
    :meetingMessageType,
    :recurrence,
    :startDateTime,
    :type,
    :allowNewTimeProposals,
    :meetingRequestType,
    :previousEndDateTime,
    :previousLocation,
    :previousStartDateTime,
    :responseRequested
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :categories => [String.t()] | nil,
          :changeKey => String.t() | nil,
          :createdDateTime => DateTime.t() | nil,
          :lastModifiedDateTime => DateTime.t() | nil,
          :attachments => [MicrosoftGraph.Model.MicrosoftGraphAttachment.t()] | nil,
          :bccRecipients =>
            [
              MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner.t()
            ]
            | nil,
          :body => MicrosoftGraph.Model.MessageBody.t() | nil,
          :bodyPreview => String.t() | nil,
          :ccRecipients =>
            [
              MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner.t()
            ]
            | nil,
          :conversationId => String.t() | nil,
          :conversationIndex => String.t() | nil,
          :extensions => [MicrosoftGraph.Model.MicrosoftGraphExtension.t()] | nil,
          :flag => MicrosoftGraph.Model.MessageFlag.t() | nil,
          :from => MicrosoftGraph.Model.MessageFrom.t() | nil,
          :hasAttachments => boolean() | nil,
          :importance => MicrosoftGraph.Model.MessageImportance.t() | nil,
          :inferenceClassification =>
            MicrosoftGraph.Model.MessageInferenceClassification.t() | nil,
          :internetMessageHeaders =>
            [MicrosoftGraph.Model.MessageInternetMessageHeadersInner.t()] | nil,
          :internetMessageId => String.t() | nil,
          :isDeliveryReceiptRequested => boolean() | nil,
          :isDraft => boolean() | nil,
          :isRead => boolean() | nil,
          :isReadReceiptRequested => boolean() | nil,
          :multiValueExtendedProperties =>
            [MicrosoftGraph.Model.MicrosoftGraphMultiValueLegacyExtendedProperty.t()] | nil,
          :parentFolderId => String.t() | nil,
          :receivedDateTime => DateTime.t() | nil,
          :replyTo =>
            [
              MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner.t()
            ]
            | nil,
          :sender =>
            MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner.t()
            | nil,
          :sentDateTime => DateTime.t() | nil,
          :singleValueExtendedProperties =>
            [MicrosoftGraph.Model.MicrosoftGraphSingleValueLegacyExtendedProperty.t()] | nil,
          :subject => String.t() | nil,
          :toRecipients =>
            [
              MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner.t()
            ]
            | nil,
          :uniqueBody =>
            MicrosoftGraph.Model.MeJoinedTeamsTeamSendActivityNotificationRequestPreviewText.t()
            | nil,
          :webLink => String.t() | nil,
          :endDateTime =>
            MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarGetScheduleRequestEndTime.t()
            | nil,
          :event => MicrosoftGraph.Model.EventMessageEvent.t() | nil,
          :isAllDay => boolean() | nil,
          :isDelegated => boolean() | nil,
          :isOutOfDate => boolean() | nil,
          :location => MicrosoftGraph.Model.PersonPostalAddressesInner.t() | nil,
          :meetingMessageType => MicrosoftGraph.Model.EventMessageMeetingMessageType.t() | nil,
          :recurrence => MicrosoftGraph.Model.EventMessageRecurrence.t() | nil,
          :startDateTime =>
            MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarGetScheduleRequestEndTime.t()
            | nil,
          :type => MicrosoftGraph.Model.EventMessageType.t() | nil,
          :allowNewTimeProposals => boolean() | nil,
          :meetingRequestType =>
            MicrosoftGraph.Model.EventMessageRequestMeetingRequestType.t() | nil,
          :previousEndDateTime =>
            MicrosoftGraph.Model.EventMessageRequestPreviousEndDateTime.t() | nil,
          :previousLocation => MicrosoftGraph.Model.EventMessageRequestPreviousLocation.t() | nil,
          :previousStartDateTime =>
            MicrosoftGraph.Model.EventMessageRequestPreviousStartDateTime.t() | nil,
          :responseRequested => boolean() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:createdDateTime, :datetime, nil)
    |> Deserializer.deserialize(:lastModifiedDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :attachments,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphAttachment
    )
    |> Deserializer.deserialize(
      :bccRecipients,
      :list,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner
    )
    |> Deserializer.deserialize(:body, :struct, MicrosoftGraph.Model.MessageBody)
    |> Deserializer.deserialize(
      :ccRecipients,
      :list,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner
    )
    |> Deserializer.deserialize(:extensions, :list, MicrosoftGraph.Model.MicrosoftGraphExtension)
    |> Deserializer.deserialize(:flag, :struct, MicrosoftGraph.Model.MessageFlag)
    |> Deserializer.deserialize(:from, :struct, MicrosoftGraph.Model.MessageFrom)
    |> Deserializer.deserialize(:importance, :struct, MicrosoftGraph.Model.MessageImportance)
    |> Deserializer.deserialize(
      :inferenceClassification,
      :struct,
      MicrosoftGraph.Model.MessageInferenceClassification
    )
    |> Deserializer.deserialize(
      :internetMessageHeaders,
      :list,
      MicrosoftGraph.Model.MessageInternetMessageHeadersInner
    )
    |> Deserializer.deserialize(
      :multiValueExtendedProperties,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphMultiValueLegacyExtendedProperty
    )
    |> Deserializer.deserialize(:receivedDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :replyTo,
      :list,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner
    )
    |> Deserializer.deserialize(
      :sender,
      :struct,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner
    )
    |> Deserializer.deserialize(:sentDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :singleValueExtendedProperties,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphSingleValueLegacyExtendedProperty
    )
    |> Deserializer.deserialize(
      :toRecipients,
      :list,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarCalendarViewEventInstancesEventForwardRequestToRecipientsInner
    )
    |> Deserializer.deserialize(
      :uniqueBody,
      :struct,
      MicrosoftGraph.Model.MeJoinedTeamsTeamSendActivityNotificationRequestPreviewText
    )
    |> Deserializer.deserialize(
      :endDateTime,
      :struct,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarGetScheduleRequestEndTime
    )
    |> Deserializer.deserialize(:event, :struct, MicrosoftGraph.Model.EventMessageEvent)
    |> Deserializer.deserialize(
      :location,
      :struct,
      MicrosoftGraph.Model.PersonPostalAddressesInner
    )
    |> Deserializer.deserialize(
      :meetingMessageType,
      :struct,
      MicrosoftGraph.Model.EventMessageMeetingMessageType
    )
    |> Deserializer.deserialize(:recurrence, :struct, MicrosoftGraph.Model.EventMessageRecurrence)
    |> Deserializer.deserialize(
      :startDateTime,
      :struct,
      MicrosoftGraph.Model.MeCalendarGroupsCalendarGroupCalendarsCalendarGetScheduleRequestEndTime
    )
    |> Deserializer.deserialize(:type, :struct, MicrosoftGraph.Model.EventMessageType)
    |> Deserializer.deserialize(
      :meetingRequestType,
      :struct,
      MicrosoftGraph.Model.EventMessageRequestMeetingRequestType
    )
    |> Deserializer.deserialize(
      :previousEndDateTime,
      :struct,
      MicrosoftGraph.Model.EventMessageRequestPreviousEndDateTime
    )
    |> Deserializer.deserialize(
      :previousLocation,
      :struct,
      MicrosoftGraph.Model.EventMessageRequestPreviousLocation
    )
    |> Deserializer.deserialize(
      :previousStartDateTime,
      :struct,
      MicrosoftGraph.Model.EventMessageRequestPreviousStartDateTime
    )
  end
end
