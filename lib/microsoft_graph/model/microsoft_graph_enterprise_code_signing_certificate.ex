# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphEnterpriseCodeSigningCertificate do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :content,
    :expirationDateTime,
    :issuer,
    :issuerName,
    :status,
    :subject,
    :subjectName,
    :uploadDateTime
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :content => String.t() | nil,
          :expirationDateTime => DateTime.t() | nil,
          :issuer => String.t() | nil,
          :issuerName => String.t() | nil,
          :status => MicrosoftGraph.Model.MicrosoftGraphCertificateStatus.t() | nil,
          :subject => String.t() | nil,
          :subjectName => String.t() | nil,
          :uploadDateTime => DateTime.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:expirationDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :status,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphCertificateStatus
    )
    |> Deserializer.deserialize(:uploadDateTime, :datetime, nil)
  end
end
