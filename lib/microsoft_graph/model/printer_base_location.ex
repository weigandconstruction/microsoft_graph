# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.PrinterBaseLocation do
  @moduledoc """
  The physical and/or organizational location of the printer/printerShare.
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :altitudeInMeters,
    :building,
    :city,
    :countryOrRegion,
    :floor,
    :floorDescription,
    :latitude,
    :longitude,
    :organization,
    :postalCode,
    :roomDescription,
    :roomName,
    :site,
    :stateOrProvince,
    :streetAddress,
    :subdivision,
    :subunit
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :altitudeInMeters => integer() | nil,
          :building => String.t() | nil,
          :city => String.t() | nil,
          :countryOrRegion => String.t() | nil,
          :floor => String.t() | nil,
          :floorDescription => String.t() | nil,
          :latitude => MicrosoftGraph.Model.MicrosoftGraphPrinterLocationLatitude.t() | nil,
          :longitude => MicrosoftGraph.Model.MicrosoftGraphPrinterLocationLongitude.t() | nil,
          :organization => [String.t()] | nil,
          :postalCode => String.t() | nil,
          :roomDescription => String.t() | nil,
          :roomName => String.t() | nil,
          :site => String.t() | nil,
          :stateOrProvince => String.t() | nil,
          :streetAddress => String.t() | nil,
          :subdivision => [String.t()] | nil,
          :subunit => [String.t()] | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :latitude,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphPrinterLocationLatitude
    )
    |> Deserializer.deserialize(
      :longitude,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphPrinterLocationLongitude
    )
  end
end
