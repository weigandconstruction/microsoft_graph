# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphDeviceManagement do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :userExperienceAnalyticsModelScores,
    :remoteAssistancePartners,
    :mobileThreatDefenseConnectors,
    :deviceCompliancePolicyDeviceStateSummary,
    :userExperienceAnalyticsAppHealthDeviceModelPerformance,
    :windowsInformationProtectionAppLearningSummaries,
    :softwareUpdateStatusSummary,
    :intuneBrand,
    :deviceCompliancePolicies,
    :userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion,
    :notificationMessageTemplates,
    :userExperienceAnalyticsAppHealthDevicePerformanceDetails,
    :deviceConfigurations,
    :userExperienceAnalyticsOverview,
    :userExperienceAnalyticsCategories,
    :resourceOperations,
    :subscriptionState,
    :userExperienceAnalyticsAppHealthApplicationPerformance,
    :userExperienceAnalyticsScoreHistory,
    :conditionalAccessSettings,
    :userExperienceAnalyticsBaselines,
    :auditEvents,
    :deviceCompliancePolicySettingStateSummaries,
    :mobileAppTroubleshootingEvents,
    :windowsAutopilotDeviceIdentities,
    :managedDevices,
    :settings,
    :userExperienceAnalyticsAppHealthOSVersionPerformance,
    :troubleshootingEvents,
    :userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails,
    :importedWindowsAutopilotDeviceIdentities,
    :detectedApps,
    :deviceConfigurationDeviceStateSummaries,
    :userExperienceAnalyticsWorkFromAnywhereMetrics,
    :userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric,
    :windowsInformationProtectionNetworkLearningSummaries,
    :userExperienceAnalyticsDeviceStartupHistory,
    :deviceCategories,
    :userExperienceAnalyticsDeviceScores,
    :exchangeConnectors,
    :userExperienceAnalyticsDevicePerformance,
    :complianceManagementPartners,
    :deviceProtectionOverview,
    :userExperienceAnalyticsWorkFromAnywhereModelPerformance,
    :userExperienceAnalyticsMetricHistory,
    :userExperienceAnalyticsSettings,
    :windowsMalwareInformation,
    :applePushNotificationCertificate,
    :deviceManagementPartners,
    :userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId,
    :windowsMalwareOverview,
    :telecomExpenseManagementPartners,
    :termsAndConditions,
    :managedDeviceOverview,
    :reports,
    :roleAssignments,
    :iosUpdateStatuses,
    :userExperienceAnalyticsDeviceStartupProcessPerformance,
    :userExperienceAnalyticsAppHealthOverview,
    :userExperienceAnalyticsAppHealthDevicePerformance,
    :deviceEnrollmentConfigurations,
    :userExperienceAnalyticsDeviceStartupProcesses,
    :roleDefinitions,
    :intuneAccountId
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :userExperienceAnalyticsModelScores =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsModelScores.t()] | nil,
          :remoteAssistancePartners =>
            [MicrosoftGraph.Model.MicrosoftGraphRemoteAssistancePartner.t()] | nil,
          :mobileThreatDefenseConnectors =>
            [MicrosoftGraph.Model.MicrosoftGraphMobileThreatDefenseConnector.t()] | nil,
          :deviceCompliancePolicyDeviceStateSummary =>
            MicrosoftGraph.Model.DeviceManagementDeviceCompliancePolicyDeviceStateSummary.t()
            | nil,
          :userExperienceAnalyticsAppHealthDeviceModelPerformance =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthDeviceModelPerformance.t()
            ]
            | nil,
          :windowsInformationProtectionAppLearningSummaries =>
            [
              MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLearningSummary.t()
            ]
            | nil,
          :softwareUpdateStatusSummary =>
            MicrosoftGraph.Model.DeviceManagementSoftwareUpdateStatusSummary.t() | nil,
          :intuneBrand => MicrosoftGraph.Model.DeviceManagementIntuneBrand.t() | nil,
          :deviceCompliancePolicies =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceCompliancePolicy.t()] | nil,
          :userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthAppPerformanceByOsVersion.t()
            ]
            | nil,
          :notificationMessageTemplates =>
            [MicrosoftGraph.Model.MicrosoftGraphNotificationMessageTemplate.t()] | nil,
          :userExperienceAnalyticsAppHealthDevicePerformanceDetails =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthDevicePerformanceDetails.t()
            ]
            | nil,
          :deviceConfigurations =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceConfiguration.t()] | nil,
          :userExperienceAnalyticsOverview =>
            MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsOverview.t() | nil,
          :userExperienceAnalyticsCategories =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsCategory.t()] | nil,
          :resourceOperations => [MicrosoftGraph.Model.MicrosoftGraphResourceOperation.t()] | nil,
          :subscriptionState =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementSubscriptionState.t() | nil,
          :userExperienceAnalyticsAppHealthApplicationPerformance =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthApplicationPerformance.t()
            ]
            | nil,
          :userExperienceAnalyticsScoreHistory =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsScoreHistory.t()] | nil,
          :conditionalAccessSettings =>
            MicrosoftGraph.Model.DeviceManagementConditionalAccessSettings.t() | nil,
          :userExperienceAnalyticsBaselines =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsBaseline.t()] | nil,
          :auditEvents => [MicrosoftGraph.Model.MicrosoftGraphAuditEvent.t()] | nil,
          :deviceCompliancePolicySettingStateSummaries =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceCompliancePolicySettingStateSummary.t()]
            | nil,
          :mobileAppTroubleshootingEvents =>
            [MicrosoftGraph.Model.MicrosoftGraphMobileAppTroubleshootingEvent.t()] | nil,
          :windowsAutopilotDeviceIdentities =>
            [MicrosoftGraph.Model.MicrosoftGraphWindowsAutopilotDeviceIdentity.t()] | nil,
          :managedDevices => [MicrosoftGraph.Model.MicrosoftGraphManagedDevice.t()] | nil,
          :settings => MicrosoftGraph.Model.DeviceManagementSettings.t() | nil,
          :userExperienceAnalyticsAppHealthOSVersionPerformance =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthOsVersionPerformance.t()
            ]
            | nil,
          :troubleshootingEvents =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceManagementTroubleshootingEvent.t()] | nil,
          :userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails.t()
            ]
            | nil,
          :importedWindowsAutopilotDeviceIdentities =>
            [MicrosoftGraph.Model.MicrosoftGraphImportedWindowsAutopilotDeviceIdentity.t()] | nil,
          :detectedApps => [MicrosoftGraph.Model.MicrosoftGraphDetectedApp.t()] | nil,
          :deviceConfigurationDeviceStateSummaries =>
            MicrosoftGraph.Model.DeviceManagementDeviceConfigurationDeviceStateSummaries.t() | nil,
          :userExperienceAnalyticsWorkFromAnywhereMetrics =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsWorkFromAnywhereMetric.t()]
            | nil,
          :userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric =>
            MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric.t()
            | nil,
          :windowsInformationProtectionNetworkLearningSummaries =>
            [
              MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary.t()
            ]
            | nil,
          :userExperienceAnalyticsDeviceStartupHistory =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceStartupHistory.t()]
            | nil,
          :deviceCategories => [MicrosoftGraph.Model.MicrosoftGraphDeviceCategory.t()] | nil,
          :userExperienceAnalyticsDeviceScores =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceScores.t()] | nil,
          :exchangeConnectors =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnector.t()] | nil,
          :userExperienceAnalyticsDevicePerformance =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDevicePerformance.t()]
            | nil,
          :complianceManagementPartners =>
            [MicrosoftGraph.Model.MicrosoftGraphComplianceManagementPartner.t()] | nil,
          :deviceProtectionOverview =>
            MicrosoftGraph.Model.DeviceManagementDeviceProtectionOverview.t() | nil,
          :userExperienceAnalyticsWorkFromAnywhereModelPerformance =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsWorkFromAnywhereModelPerformance.t()
            ]
            | nil,
          :userExperienceAnalyticsMetricHistory =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsMetricHistory.t()] | nil,
          :userExperienceAnalyticsSettings =>
            MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsSettings.t() | nil,
          :windowsMalwareInformation =>
            [MicrosoftGraph.Model.MicrosoftGraphWindowsMalwareInformation.t()] | nil,
          :applePushNotificationCertificate =>
            MicrosoftGraph.Model.DeviceManagementApplePushNotificationCertificate.t() | nil,
          :deviceManagementPartners =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartner.t()] | nil,
          :userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId.t()
            ]
            | nil,
          :windowsMalwareOverview =>
            MicrosoftGraph.Model.DeviceManagementWindowsMalwareOverview.t() | nil,
          :telecomExpenseManagementPartners =>
            [MicrosoftGraph.Model.MicrosoftGraphTelecomExpenseManagementPartner.t()] | nil,
          :termsAndConditions =>
            [MicrosoftGraph.Model.MicrosoftGraphTermsAndConditions.t()] | nil,
          :managedDeviceOverview =>
            MicrosoftGraph.Model.DeviceManagementManagedDeviceOverview.t() | nil,
          :reports => MicrosoftGraph.Model.DeviceManagementReports.t() | nil,
          :roleAssignments =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceAndAppManagementRoleAssignment.t()] | nil,
          :iosUpdateStatuses =>
            [MicrosoftGraph.Model.MicrosoftGraphIosUpdateDeviceStatus.t()] | nil,
          :userExperienceAnalyticsDeviceStartupProcessPerformance =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceStartupProcessPerformance.t()
            ]
            | nil,
          :userExperienceAnalyticsAppHealthOverview =>
            MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsAppHealthOverview.t()
            | nil,
          :userExperienceAnalyticsAppHealthDevicePerformance =>
            [
              MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthDevicePerformance.t()
            ]
            | nil,
          :deviceEnrollmentConfigurations =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceEnrollmentConfiguration.t()] | nil,
          :userExperienceAnalyticsDeviceStartupProcesses =>
            [MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceStartupProcess.t()]
            | nil,
          :roleDefinitions => [MicrosoftGraph.Model.MicrosoftGraphRoleDefinition.t()] | nil,
          :intuneAccountId => String.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :userExperienceAnalyticsModelScores,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsModelScores
    )
    |> Deserializer.deserialize(
      :remoteAssistancePartners,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphRemoteAssistancePartner
    )
    |> Deserializer.deserialize(
      :mobileThreatDefenseConnectors,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphMobileThreatDefenseConnector
    )
    |> Deserializer.deserialize(
      :deviceCompliancePolicyDeviceStateSummary,
      :struct,
      MicrosoftGraph.Model.DeviceManagementDeviceCompliancePolicyDeviceStateSummary
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthDeviceModelPerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthDeviceModelPerformance
    )
    |> Deserializer.deserialize(
      :windowsInformationProtectionAppLearningSummaries,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLearningSummary
    )
    |> Deserializer.deserialize(
      :softwareUpdateStatusSummary,
      :struct,
      MicrosoftGraph.Model.DeviceManagementSoftwareUpdateStatusSummary
    )
    |> Deserializer.deserialize(
      :intuneBrand,
      :struct,
      MicrosoftGraph.Model.DeviceManagementIntuneBrand
    )
    |> Deserializer.deserialize(
      :deviceCompliancePolicies,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceCompliancePolicy
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthAppPerformanceByOsVersion
    )
    |> Deserializer.deserialize(
      :notificationMessageTemplates,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphNotificationMessageTemplate
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthDevicePerformanceDetails,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthDevicePerformanceDetails
    )
    |> Deserializer.deserialize(
      :deviceConfigurations,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceConfiguration
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsOverview,
      :struct,
      MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsOverview
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsCategories,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsCategory
    )
    |> Deserializer.deserialize(
      :resourceOperations,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphResourceOperation
    )
    |> Deserializer.deserialize(
      :subscriptionState,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementSubscriptionState
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthApplicationPerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthApplicationPerformance
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsScoreHistory,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsScoreHistory
    )
    |> Deserializer.deserialize(
      :conditionalAccessSettings,
      :struct,
      MicrosoftGraph.Model.DeviceManagementConditionalAccessSettings
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsBaselines,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsBaseline
    )
    |> Deserializer.deserialize(
      :auditEvents,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphAuditEvent
    )
    |> Deserializer.deserialize(
      :deviceCompliancePolicySettingStateSummaries,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceCompliancePolicySettingStateSummary
    )
    |> Deserializer.deserialize(
      :mobileAppTroubleshootingEvents,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphMobileAppTroubleshootingEvent
    )
    |> Deserializer.deserialize(
      :windowsAutopilotDeviceIdentities,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphWindowsAutopilotDeviceIdentity
    )
    |> Deserializer.deserialize(
      :managedDevices,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphManagedDevice
    )
    |> Deserializer.deserialize(:settings, :struct, MicrosoftGraph.Model.DeviceManagementSettings)
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthOSVersionPerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthOsVersionPerformance
    )
    |> Deserializer.deserialize(
      :troubleshootingEvents,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementTroubleshootingEvent
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDetails,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDetails
    )
    |> Deserializer.deserialize(
      :importedWindowsAutopilotDeviceIdentities,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphImportedWindowsAutopilotDeviceIdentity
    )
    |> Deserializer.deserialize(
      :detectedApps,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDetectedApp
    )
    |> Deserializer.deserialize(
      :deviceConfigurationDeviceStateSummaries,
      :struct,
      MicrosoftGraph.Model.DeviceManagementDeviceConfigurationDeviceStateSummaries
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsWorkFromAnywhereMetrics,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsWorkFromAnywhereMetric
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric,
      :struct,
      MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsWorkFromAnywhereHardwareReadinessMetric
    )
    |> Deserializer.deserialize(
      :windowsInformationProtectionNetworkLearningSummaries,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionNetworkLearningSummary
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsDeviceStartupHistory,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceStartupHistory
    )
    |> Deserializer.deserialize(
      :deviceCategories,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceCategory
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsDeviceScores,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceScores
    )
    |> Deserializer.deserialize(
      :exchangeConnectors,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnector
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsDevicePerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDevicePerformance
    )
    |> Deserializer.deserialize(
      :complianceManagementPartners,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphComplianceManagementPartner
    )
    |> Deserializer.deserialize(
      :deviceProtectionOverview,
      :struct,
      MicrosoftGraph.Model.DeviceManagementDeviceProtectionOverview
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsWorkFromAnywhereModelPerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsWorkFromAnywhereModelPerformance
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsMetricHistory,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsMetricHistory
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsSettings,
      :struct,
      MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsSettings
    )
    |> Deserializer.deserialize(
      :windowsMalwareInformation,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphWindowsMalwareInformation
    )
    |> Deserializer.deserialize(
      :applePushNotificationCertificate,
      :struct,
      MicrosoftGraph.Model.DeviceManagementApplePushNotificationCertificate
    )
    |> Deserializer.deserialize(
      :deviceManagementPartners,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartner
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionDeviceId,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthAppPerformanceByAppVersionDeviceId
    )
    |> Deserializer.deserialize(
      :windowsMalwareOverview,
      :struct,
      MicrosoftGraph.Model.DeviceManagementWindowsMalwareOverview
    )
    |> Deserializer.deserialize(
      :telecomExpenseManagementPartners,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphTelecomExpenseManagementPartner
    )
    |> Deserializer.deserialize(
      :termsAndConditions,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphTermsAndConditions
    )
    |> Deserializer.deserialize(
      :managedDeviceOverview,
      :struct,
      MicrosoftGraph.Model.DeviceManagementManagedDeviceOverview
    )
    |> Deserializer.deserialize(:reports, :struct, MicrosoftGraph.Model.DeviceManagementReports)
    |> Deserializer.deserialize(
      :roleAssignments,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceAndAppManagementRoleAssignment
    )
    |> Deserializer.deserialize(
      :iosUpdateStatuses,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphIosUpdateDeviceStatus
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsDeviceStartupProcessPerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceStartupProcessPerformance
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthOverview,
      :struct,
      MicrosoftGraph.Model.DeviceManagementUserExperienceAnalyticsAppHealthOverview
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsAppHealthDevicePerformance,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsAppHealthDevicePerformance
    )
    |> Deserializer.deserialize(
      :deviceEnrollmentConfigurations,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceEnrollmentConfiguration
    )
    |> Deserializer.deserialize(
      :userExperienceAnalyticsDeviceStartupProcesses,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsDeviceStartupProcess
    )
    |> Deserializer.deserialize(
      :roleDefinitions,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphRoleDefinition
    )
  end
end
