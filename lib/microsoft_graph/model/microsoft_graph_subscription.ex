# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphSubscription do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :applicationId,
    :changeType,
    :clientState,
    :creatorId,
    :encryptionCertificate,
    :encryptionCertificateId,
    :expirationDateTime,
    :includeResourceData,
    :latestSupportedTlsVersion,
    :lifecycleNotificationUrl,
    :notificationQueryOptions,
    :notificationUrl,
    :notificationUrlAppId,
    :resource
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :applicationId => String.t() | nil,
          :changeType => String.t() | nil,
          :clientState => String.t() | nil,
          :creatorId => String.t() | nil,
          :encryptionCertificate => String.t() | nil,
          :encryptionCertificateId => String.t() | nil,
          :expirationDateTime => DateTime.t() | nil,
          :includeResourceData => boolean() | nil,
          :latestSupportedTlsVersion => String.t() | nil,
          :lifecycleNotificationUrl => String.t() | nil,
          :notificationQueryOptions => String.t() | nil,
          :notificationUrl => String.t() | nil,
          :notificationUrlAppId => String.t() | nil,
          :resource => String.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:expirationDateTime, :datetime, nil)
  end
end
