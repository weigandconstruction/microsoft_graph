# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnector do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :connectorServerName,
    :exchangeAlias,
    :exchangeConnectorType,
    :exchangeOrganization,
    :lastSyncDateTime,
    :primarySmtpAddress,
    :serverName,
    :status,
    :version
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :connectorServerName => String.t() | nil,
          :exchangeAlias => String.t() | nil,
          :exchangeConnectorType =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnectorType.t() | nil,
          :exchangeOrganization => String.t() | nil,
          :lastSyncDateTime => DateTime.t() | nil,
          :primarySmtpAddress => String.t() | nil,
          :serverName => String.t() | nil,
          :status =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnectorStatus.t() | nil,
          :version => String.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :exchangeConnectorType,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnectorType
    )
    |> Deserializer.deserialize(:lastSyncDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :status,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeConnectorStatus
    )
  end
end
