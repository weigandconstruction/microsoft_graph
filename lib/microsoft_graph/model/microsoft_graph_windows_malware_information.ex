# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphWindowsMalwareInformation do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :additionalInformationUrl,
    :category,
    :deviceMalwareStates,
    :displayName,
    :lastDetectionDateTime,
    :severity
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :id => String.t | nil,
    :additionalInformationUrl => String.t | nil,
    :category => MicrosoftGraph.Model.WindowsMalwareInformationCategory.t | nil,
    :deviceMalwareStates => [MicrosoftGraph.Model.MicrosoftGraphMalwareStateForWindowsDevice.t] | nil,
    :displayName => String.t | nil,
    :lastDetectionDateTime => DateTime.t | nil,
    :severity => MicrosoftGraph.Model.WindowsMalwareInformationSeverity.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:category, :struct, MicrosoftGraph.Model.WindowsMalwareInformationCategory)
     |> Deserializer.deserialize(:deviceMalwareStates, :list, MicrosoftGraph.Model.MicrosoftGraphMalwareStateForWindowsDevice)
     |> Deserializer.deserialize(:lastDetectionDateTime, :datetime, nil)
     |> Deserializer.deserialize(:severity, :struct, MicrosoftGraph.Model.WindowsMalwareInformationSeverity)
  end
end

