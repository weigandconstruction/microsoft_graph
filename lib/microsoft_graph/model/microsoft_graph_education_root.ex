# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphEducationRoot do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :classes,
    :me,
    :schools,
    :users
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :classes => [MicrosoftGraph.Model.MicrosoftGraphEducationClass.t()] | nil,
          :me => MicrosoftGraph.Model.MicrosoftGraphEducationRootMe.t() | nil,
          :schools => [MicrosoftGraph.Model.MicrosoftGraphEducationSchool.t()] | nil,
          :users => [MicrosoftGraph.Model.MicrosoftGraphEducationUser.t()] | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :classes,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphEducationClass
    )
    |> Deserializer.deserialize(:me, :struct, MicrosoftGraph.Model.MicrosoftGraphEducationRootMe)
    |> Deserializer.deserialize(
      :schools,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphEducationSchool
    )
    |> Deserializer.deserialize(:users, :list, MicrosoftGraph.Model.MicrosoftGraphEducationUser)
  end
end
