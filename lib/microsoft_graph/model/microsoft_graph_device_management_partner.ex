# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartner do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :displayName,
    :groupsRequiringPartnerEnrollment,
    :isConfigured,
    :lastHeartbeatDateTime,
    :partnerAppType,
    :partnerState,
    :singleTenantAppId,
    :whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime,
    :whenPartnerDevicesWillBeRemovedDateTime
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :displayName => String.t() | nil,
          :groupsRequiringPartnerEnrollment =>
            [
              MicrosoftGraph.Model.DeviceManagementPartnerGroupsRequiringPartnerEnrollmentInner.t()
            ]
            | nil,
          :isConfigured => boolean() | nil,
          :lastHeartbeatDateTime => DateTime.t() | nil,
          :partnerAppType =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartnerAppType.t() | nil,
          :partnerState =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartnerTenantState.t() | nil,
          :singleTenantAppId => String.t() | nil,
          :whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime => DateTime.t() | nil,
          :whenPartnerDevicesWillBeRemovedDateTime => DateTime.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :groupsRequiringPartnerEnrollment,
      :list,
      MicrosoftGraph.Model.DeviceManagementPartnerGroupsRequiringPartnerEnrollmentInner
    )
    |> Deserializer.deserialize(:lastHeartbeatDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :partnerAppType,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartnerAppType
    )
    |> Deserializer.deserialize(
      :partnerState,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementPartnerTenantState
    )
    |> Deserializer.deserialize(
      :whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime,
      :datetime,
      nil
    )
    |> Deserializer.deserialize(:whenPartnerDevicesWillBeRemovedDateTime, :datetime, nil)
  end
end
