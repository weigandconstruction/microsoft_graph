# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.UnifiedRoleAssignmentScheduleRequestActivatedUsing do
  @moduledoc """
  If the request is from an eligible administrator to activate a role, this parameter will show the related eligible assignment for that activation. Otherwise, it's null. Supports $expand.
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :appScope,
    :appScopeId,
    :createdDateTime,
    :createdUsing,
    :directoryScope,
    :directoryScopeId,
    :modifiedDateTime,
    :principal,
    :principalId,
    :roleDefinition,
    :roleDefinitionId,
    :status,
    :memberType,
    :scheduleInfo
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :id => String.t | nil,
    :appScope => MicrosoftGraph.Model.UnifiedRoleScheduleBaseAppScope.t | nil,
    :appScopeId => String.t | nil,
    :createdDateTime => DateTime.t | nil,
    :createdUsing => String.t | nil,
    :directoryScope => MicrosoftGraph.Model.UnifiedRoleScheduleBaseDirectoryScope.t | nil,
    :directoryScopeId => String.t | nil,
    :modifiedDateTime => DateTime.t | nil,
    :principal => MicrosoftGraph.Model.UnifiedRoleScheduleBasePrincipal.t | nil,
    :principalId => String.t | nil,
    :roleDefinition => MicrosoftGraph.Model.UnifiedRoleScheduleInstanceBaseRoleDefinition.t | nil,
    :roleDefinitionId => String.t | nil,
    :status => String.t | nil,
    :memberType => String.t | nil,
    :scheduleInfo => MicrosoftGraph.Model.UnifiedRoleEligibilityScheduleScheduleInfo.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:appScope, :struct, MicrosoftGraph.Model.UnifiedRoleScheduleBaseAppScope)
     |> Deserializer.deserialize(:createdDateTime, :datetime, nil)
     |> Deserializer.deserialize(:directoryScope, :struct, MicrosoftGraph.Model.UnifiedRoleScheduleBaseDirectoryScope)
     |> Deserializer.deserialize(:modifiedDateTime, :datetime, nil)
     |> Deserializer.deserialize(:principal, :struct, MicrosoftGraph.Model.UnifiedRoleScheduleBasePrincipal)
     |> Deserializer.deserialize(:roleDefinition, :struct, MicrosoftGraph.Model.UnifiedRoleScheduleInstanceBaseRoleDefinition)
     |> Deserializer.deserialize(:scheduleInfo, :struct, MicrosoftGraph.Model.UnifiedRoleEligibilityScheduleScheduleInfo)
  end
end

