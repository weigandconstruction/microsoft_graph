# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphAttackSimulationRoot do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :endUserNotifications,
    :landingPages,
    :loginPages,
    :operations,
    :payloads,
    :simulationAutomations,
    :simulations,
    :trainings
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :endUserNotifications =>
            [MicrosoftGraph.Model.MicrosoftGraphEndUserNotification.t()] | nil,
          :landingPages => [MicrosoftGraph.Model.MicrosoftGraphLandingPage.t()] | nil,
          :loginPages => [MicrosoftGraph.Model.MicrosoftGraphLoginPage.t()] | nil,
          :operations => [MicrosoftGraph.Model.MicrosoftGraphAttackSimulationOperation.t()] | nil,
          :payloads => [MicrosoftGraph.Model.MicrosoftGraphPayload.t()] | nil,
          :simulationAutomations =>
            [MicrosoftGraph.Model.MicrosoftGraphSimulationAutomation.t()] | nil,
          :simulations => [MicrosoftGraph.Model.MicrosoftGraphSimulation.t()] | nil,
          :trainings => [MicrosoftGraph.Model.MicrosoftGraphTraining.t()] | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :endUserNotifications,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphEndUserNotification
    )
    |> Deserializer.deserialize(
      :landingPages,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphLandingPage
    )
    |> Deserializer.deserialize(:loginPages, :list, MicrosoftGraph.Model.MicrosoftGraphLoginPage)
    |> Deserializer.deserialize(
      :operations,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphAttackSimulationOperation
    )
    |> Deserializer.deserialize(:payloads, :list, MicrosoftGraph.Model.MicrosoftGraphPayload)
    |> Deserializer.deserialize(
      :simulationAutomations,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphSimulationAutomation
    )
    |> Deserializer.deserialize(
      :simulations,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphSimulation
    )
    |> Deserializer.deserialize(:trainings, :list, MicrosoftGraph.Model.MicrosoftGraphTraining)
  end
end
