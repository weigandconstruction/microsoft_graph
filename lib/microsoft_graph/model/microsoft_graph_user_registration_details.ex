# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphUserRegistrationDetails do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :isAdmin,
    :isMfaCapable,
    :isMfaRegistered,
    :isPasswordlessCapable,
    :isSsprCapable,
    :isSsprEnabled,
    :isSsprRegistered,
    :isSystemPreferredAuthenticationMethodEnabled,
    :lastUpdatedDateTime,
    :methodsRegistered,
    :systemPreferredAuthenticationMethods,
    :userDisplayName,
    :userPreferredMethodForSecondaryAuthentication,
    :userPrincipalName,
    :userType
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :id => String.t | nil,
    :isAdmin => boolean() | nil,
    :isMfaCapable => boolean() | nil,
    :isMfaRegistered => boolean() | nil,
    :isPasswordlessCapable => boolean() | nil,
    :isSsprCapable => boolean() | nil,
    :isSsprEnabled => boolean() | nil,
    :isSsprRegistered => boolean() | nil,
    :isSystemPreferredAuthenticationMethodEnabled => boolean() | nil,
    :lastUpdatedDateTime => DateTime.t | nil,
    :methodsRegistered => [String.t] | nil,
    :systemPreferredAuthenticationMethods => [String.t] | nil,
    :userDisplayName => String.t | nil,
    :userPreferredMethodForSecondaryAuthentication => MicrosoftGraph.Model.UserRegistrationDetailsUserPreferredMethodForSecondaryAuthentication.t | nil,
    :userPrincipalName => String.t | nil,
    :userType => MicrosoftGraph.Model.UserRegistrationDetailsUserType.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:lastUpdatedDateTime, :datetime, nil)
     |> Deserializer.deserialize(:userPreferredMethodForSecondaryAuthentication, :struct, MicrosoftGraph.Model.UserRegistrationDetailsUserPreferredMethodForSecondaryAuthentication)
     |> Deserializer.deserialize(:userType, :struct, MicrosoftGraph.Model.UserRegistrationDetailsUserType)
  end
end

