# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphOrganization do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :deletedDateTime,
    :assignedPlans,
    :branding,
    :businessPhones,
    :certificateBasedAuthConfiguration,
    :city,
    :country,
    :countryLetterCode,
    :createdDateTime,
    :defaultUsageLocation,
    :displayName,
    :extensions,
    :marketingNotificationEmails,
    :mobileDeviceManagementAuthority,
    :onPremisesLastSyncDateTime,
    :onPremisesSyncEnabled,
    :partnerTenantType,
    :postalCode,
    :preferredLanguage,
    :privacyProfile,
    :provisionedPlans,
    :securityComplianceNotificationMails,
    :securityComplianceNotificationPhones,
    :state,
    :street,
    :technicalNotificationMails,
    :tenantType,
    :verifiedDomains
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :deletedDateTime => DateTime.t() | nil,
          :assignedPlans => [MicrosoftGraph.Model.MicrosoftGraphAssignedPlan.t()] | nil,
          :branding => MicrosoftGraph.Model.OrganizationBranding.t() | nil,
          :businessPhones => [String.t()] | nil,
          :certificateBasedAuthConfiguration =>
            [MicrosoftGraph.Model.MicrosoftGraphCertificateBasedAuthConfiguration.t()] | nil,
          :city => String.t() | nil,
          :country => String.t() | nil,
          :countryLetterCode => String.t() | nil,
          :createdDateTime => DateTime.t() | nil,
          :defaultUsageLocation => String.t() | nil,
          :displayName => String.t() | nil,
          :extensions => [MicrosoftGraph.Model.MicrosoftGraphExtension.t()] | nil,
          :marketingNotificationEmails => [String.t()] | nil,
          :mobileDeviceManagementAuthority =>
            MicrosoftGraph.Model.MicrosoftGraphMdmAuthority.t() | nil,
          :onPremisesLastSyncDateTime => DateTime.t() | nil,
          :onPremisesSyncEnabled => boolean() | nil,
          :partnerTenantType => MicrosoftGraph.Model.OrganizationPartnerTenantType.t() | nil,
          :postalCode => String.t() | nil,
          :preferredLanguage => String.t() | nil,
          :privacyProfile => MicrosoftGraph.Model.OrganizationPrivacyProfile.t() | nil,
          :provisionedPlans => [MicrosoftGraph.Model.MicrosoftGraphProvisionedPlan.t()] | nil,
          :securityComplianceNotificationMails => [String.t()] | nil,
          :securityComplianceNotificationPhones => [String.t()] | nil,
          :state => String.t() | nil,
          :street => String.t() | nil,
          :technicalNotificationMails => [String.t()] | nil,
          :tenantType => String.t() | nil,
          :verifiedDomains => [MicrosoftGraph.Model.MicrosoftGraphVerifiedDomain.t()] | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:deletedDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :assignedPlans,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphAssignedPlan
    )
    |> Deserializer.deserialize(:branding, :struct, MicrosoftGraph.Model.OrganizationBranding)
    |> Deserializer.deserialize(
      :certificateBasedAuthConfiguration,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphCertificateBasedAuthConfiguration
    )
    |> Deserializer.deserialize(:createdDateTime, :datetime, nil)
    |> Deserializer.deserialize(:extensions, :list, MicrosoftGraph.Model.MicrosoftGraphExtension)
    |> Deserializer.deserialize(
      :mobileDeviceManagementAuthority,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphMdmAuthority
    )
    |> Deserializer.deserialize(:onPremisesLastSyncDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :partnerTenantType,
      :struct,
      MicrosoftGraph.Model.OrganizationPartnerTenantType
    )
    |> Deserializer.deserialize(
      :privacyProfile,
      :struct,
      MicrosoftGraph.Model.OrganizationPrivacyProfile
    )
    |> Deserializer.deserialize(
      :provisionedPlans,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphProvisionedPlan
    )
    |> Deserializer.deserialize(
      :verifiedDomains,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphVerifiedDomain
    )
  end
end
