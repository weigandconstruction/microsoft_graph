# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphSynchronizationStatusQuarantine do
  @moduledoc """
  If job is in quarantine, quarantine details.
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :currentBegan,
    :error,
    :nextAttempt,
    :reason,
    :seriesBegan,
    :seriesCount
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :currentBegan => DateTime.t() | nil,
          :error => MicrosoftGraph.Model.MicrosoftGraphSynchronizationQuarantineError.t() | nil,
          :nextAttempt => DateTime.t() | nil,
          :reason => MicrosoftGraph.Model.MicrosoftGraphQuarantineReason.t() | nil,
          :seriesBegan => DateTime.t() | nil,
          :seriesCount => integer() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:currentBegan, :datetime, nil)
    |> Deserializer.deserialize(
      :error,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphSynchronizationQuarantineError
    )
    |> Deserializer.deserialize(:nextAttempt, :datetime, nil)
    |> Deserializer.deserialize(
      :reason,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphQuarantineReason
    )
    |> Deserializer.deserialize(:seriesBegan, :datetime, nil)
  end
end
