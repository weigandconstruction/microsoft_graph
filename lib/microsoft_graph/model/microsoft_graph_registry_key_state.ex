# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphRegistryKeyState do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :hive,
    :key,
    :oldKey,
    :oldValueData,
    :oldValueName,
    :operation,
    :processId,
    :valueData,
    :valueName,
    :valueType
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :hive => MicrosoftGraph.Model.MicrosoftGraphRegistryKeyStateHive.t() | nil,
          :key => String.t() | nil,
          :oldKey => String.t() | nil,
          :oldValueData => String.t() | nil,
          :oldValueName => String.t() | nil,
          :operation => MicrosoftGraph.Model.MicrosoftGraphRegistryKeyStateOperation.t() | nil,
          :processId => integer() | nil,
          :valueData => String.t() | nil,
          :valueName => String.t() | nil,
          :valueType => MicrosoftGraph.Model.MicrosoftGraphRegistryKeyStateValueType.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :hive,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphRegistryKeyStateHive
    )
    |> Deserializer.deserialize(
      :operation,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphRegistryKeyStateOperation
    )
    |> Deserializer.deserialize(
      :valueType,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphRegistryKeyStateValueType
    )
  end
end
