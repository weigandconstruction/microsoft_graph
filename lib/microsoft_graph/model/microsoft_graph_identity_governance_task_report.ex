# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTaskReport do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :completedDateTime,
    :failedUsersCount,
    :lastUpdatedDateTime,
    :processingStatus,
    :runId,
    :startedDateTime,
    :successfulUsersCount,
    :task,
    :taskDefinition,
    :taskProcessingResults,
    :totalUsersCount,
    :unprocessedUsersCount
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :completedDateTime => DateTime.t() | nil,
          :failedUsersCount => integer() | nil,
          :lastUpdatedDateTime => DateTime.t() | nil,
          :processingStatus =>
            MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceLifecycleWorkflowProcessingStatus.t()
            | nil,
          :runId => String.t() | nil,
          :startedDateTime => DateTime.t() | nil,
          :successfulUsersCount => integer() | nil,
          :task => MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTask.t() | nil,
          :taskDefinition =>
            MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTaskDefinition.t() | nil,
          :taskProcessingResults =>
            [MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTaskProcessingResult.t()] | nil,
          :totalUsersCount => integer() | nil,
          :unprocessedUsersCount => integer() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:completedDateTime, :datetime, nil)
    |> Deserializer.deserialize(:lastUpdatedDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :processingStatus,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceLifecycleWorkflowProcessingStatus
    )
    |> Deserializer.deserialize(:startedDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :task,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTask
    )
    |> Deserializer.deserialize(
      :taskDefinition,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTaskDefinition
    )
    |> Deserializer.deserialize(
      :taskProcessingResults,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphIdentityGovernanceTaskProcessingResult
    )
  end
end
