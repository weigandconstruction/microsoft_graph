# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphObjectMappingScope do
  @moduledoc """
  Defines a filter to be used when deciding whether a given object should be provisioned. For example, you might want to only provision users that are located in the US.
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :categoryFilterGroups,
    :groups,
    :inputFilterGroups
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :categoryFilterGroups =>
            [MicrosoftGraph.Model.MicrosoftGraphFilterCategoryFilterGroupsInner.t()] | nil,
          :groups =>
            [MicrosoftGraph.Model.MicrosoftGraphFilterCategoryFilterGroupsInner.t()] | nil,
          :inputFilterGroups =>
            [MicrosoftGraph.Model.MicrosoftGraphFilterCategoryFilterGroupsInner.t()] | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :categoryFilterGroups,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphFilterCategoryFilterGroupsInner
    )
    |> Deserializer.deserialize(
      :groups,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphFilterCategoryFilterGroupsInner
    )
    |> Deserializer.deserialize(
      :inputFilterGroups,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphFilterCategoryFilterGroupsInner
    )
  end
end
