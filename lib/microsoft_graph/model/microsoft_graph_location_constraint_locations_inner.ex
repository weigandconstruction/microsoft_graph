# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphLocationConstraintLocationsInner do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :address,
    :coordinates,
    :displayName,
    :locationEmailAddress,
    :locationType,
    :locationUri,
    :uniqueId,
    :uniqueIdType,
    :resolveAvailability
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :address => MicrosoftGraph.Model.MicrosoftGraphLocationAddress.t | nil,
    :coordinates => MicrosoftGraph.Model.MicrosoftGraphLocationCoordinates.t | nil,
    :displayName => String.t | nil,
    :locationEmailAddress => String.t | nil,
    :locationType => MicrosoftGraph.Model.MicrosoftGraphLocationLocationType.t | nil,
    :locationUri => String.t | nil,
    :uniqueId => String.t | nil,
    :uniqueIdType => MicrosoftGraph.Model.MicrosoftGraphLocationUniqueIdType.t | nil,
    :resolveAvailability => boolean() | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:address, :struct, MicrosoftGraph.Model.MicrosoftGraphLocationAddress)
     |> Deserializer.deserialize(:coordinates, :struct, MicrosoftGraph.Model.MicrosoftGraphLocationCoordinates)
     |> Deserializer.deserialize(:locationType, :struct, MicrosoftGraph.Model.MicrosoftGraphLocationLocationType)
     |> Deserializer.deserialize(:uniqueIdType, :struct, MicrosoftGraph.Model.MicrosoftGraphLocationUniqueIdType)
  end
end

