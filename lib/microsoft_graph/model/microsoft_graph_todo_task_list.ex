# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphTodoTaskList do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :displayName,
    :extensions,
    :isOwner,
    :isShared,
    :tasks,
    :wellknownListName
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :displayName => String.t() | nil,
          :extensions => [MicrosoftGraph.Model.MicrosoftGraphExtension.t()] | nil,
          :isOwner => boolean() | nil,
          :isShared => boolean() | nil,
          :tasks => [MicrosoftGraph.Model.MicrosoftGraphTodoTask.t()] | nil,
          :wellknownListName => MicrosoftGraph.Model.MicrosoftGraphWellknownListName.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:extensions, :list, MicrosoftGraph.Model.MicrosoftGraphExtension)
    |> Deserializer.deserialize(:tasks, :list, MicrosoftGraph.Model.MicrosoftGraphTodoTask)
    |> Deserializer.deserialize(
      :wellknownListName,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphWellknownListName
    )
  end
end
