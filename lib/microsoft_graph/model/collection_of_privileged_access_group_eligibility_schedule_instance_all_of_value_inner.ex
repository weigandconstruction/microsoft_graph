# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.CollectionOfPrivilegedAccessGroupEligibilityScheduleInstanceAllOfValueInner do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :endDateTime,
    :startDateTime,
    :accessId,
    :eligibilityScheduleId,
    :group,
    :groupId,
    :memberType,
    :principal,
    :principalId
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :id => String.t | nil,
    :endDateTime => DateTime.t | nil,
    :startDateTime => DateTime.t | nil,
    :accessId => MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleInstanceAccessId.t | nil,
    :eligibilityScheduleId => String.t | nil,
    :group => MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleGroup.t | nil,
    :groupId => String.t | nil,
    :memberType => MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleInstanceMemberType.t | nil,
    :principal => MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleInstancePrincipal.t | nil,
    :principalId => String.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:endDateTime, :datetime, nil)
     |> Deserializer.deserialize(:startDateTime, :datetime, nil)
     |> Deserializer.deserialize(:accessId, :struct, MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleInstanceAccessId)
     |> Deserializer.deserialize(:group, :struct, MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleGroup)
     |> Deserializer.deserialize(:memberType, :struct, MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleInstanceMemberType)
     |> Deserializer.deserialize(:principal, :struct, MicrosoftGraph.Model.PrivilegedAccessGroupEligibilityScheduleInstancePrincipal)
  end
end

