# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.CollectionOfUserExperienceAnalyticsDevicePerformanceAllOfValueInner do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :averageBlueScreens,
    :averageRestarts,
    :blueScreenCount,
    :bootScore,
    :coreBootTimeInMs,
    :coreLoginTimeInMs,
    :deviceCount,
    :deviceName,
    :diskType,
    :groupPolicyBootTimeInMs,
    :groupPolicyLoginTimeInMs,
    :healthStatus,
    :loginScore,
    :manufacturer,
    :model,
    :modelStartupPerformanceScore,
    :operatingSystemVersion,
    :responsiveDesktopTimeInMs,
    :restartCount,
    :startupPerformanceScore
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :id => String.t | nil,
    :averageBlueScreens => MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceAverageBlueScreens.t | nil,
    :averageRestarts => MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceAverageRestarts.t | nil,
    :blueScreenCount => integer() | nil,
    :bootScore => integer() | nil,
    :coreBootTimeInMs => integer() | nil,
    :coreLoginTimeInMs => integer() | nil,
    :deviceCount => integer() | nil,
    :deviceName => String.t | nil,
    :diskType => MicrosoftGraph.Model.MicrosoftGraphDiskType.t | nil,
    :groupPolicyBootTimeInMs => integer() | nil,
    :groupPolicyLoginTimeInMs => integer() | nil,
    :healthStatus => MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsHealthState.t | nil,
    :loginScore => integer() | nil,
    :manufacturer => String.t | nil,
    :model => String.t | nil,
    :modelStartupPerformanceScore => MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceModelStartupPerformanceScore.t | nil,
    :operatingSystemVersion => String.t | nil,
    :responsiveDesktopTimeInMs => integer() | nil,
    :restartCount => integer() | nil,
    :startupPerformanceScore => MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceStartupPerformanceScore.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:averageBlueScreens, :struct, MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceAverageBlueScreens)
     |> Deserializer.deserialize(:averageRestarts, :struct, MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceAverageRestarts)
     |> Deserializer.deserialize(:diskType, :struct, MicrosoftGraph.Model.MicrosoftGraphDiskType)
     |> Deserializer.deserialize(:healthStatus, :struct, MicrosoftGraph.Model.MicrosoftGraphUserExperienceAnalyticsHealthState)
     |> Deserializer.deserialize(:modelStartupPerformanceScore, :struct, MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceModelStartupPerformanceScore)
     |> Deserializer.deserialize(:startupPerformanceScore, :struct, MicrosoftGraph.Model.UserExperienceAnalyticsDevicePerformanceStartupPerformanceScore)
  end
end

