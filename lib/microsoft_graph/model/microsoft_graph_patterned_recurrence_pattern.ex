# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphPatternedRecurrencePattern do
  @moduledoc """
  The frequency of an event.  For access reviews: Do not specify this property for a one-time access review.  Only interval, dayOfMonth, and type (weekly, absoluteMonthly) properties of recurrencePattern are supported.
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :dayOfMonth,
    :daysOfWeek,
    :firstDayOfWeek,
    :index,
    :interval,
    :month,
    :type
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :dayOfMonth => integer() | nil,
    :daysOfWeek => [MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternDaysOfWeekInner.t] | nil,
    :firstDayOfWeek => MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternFirstDayOfWeek.t | nil,
    :index => MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternIndex.t | nil,
    :interval => integer() | nil,
    :month => integer() | nil,
    :type => MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternType.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:daysOfWeek, :list, MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternDaysOfWeekInner)
     |> Deserializer.deserialize(:firstDayOfWeek, :struct, MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternFirstDayOfWeek)
     |> Deserializer.deserialize(:index, :struct, MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternIndex)
     |> Deserializer.deserialize(:type, :struct, MicrosoftGraph.Model.MicrosoftGraphRecurrencePatternType)
  end
end

