# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphWindowsUniversalAppX do
  @moduledoc """
  
  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :assignments,
    :categories,
    :createdDateTime,
    :description,
    :developer,
    :displayName,
    :informationUrl,
    :isFeatured,
    :largeIcon,
    :lastModifiedDateTime,
    :notes,
    :owner,
    :privacyInformationUrl,
    :publisher,
    :publishingState,
    :committedContentVersion,
    :contentVersions,
    :fileName,
    :size,
    :applicableArchitectures,
    :applicableDeviceTypes,
    :committedContainedApps,
    :identityName,
    :identityPublisherHash,
    :identityResourceIdentifier,
    :identityVersion,
    :isBundle,
    :minimumSupportedOperatingSystem
  ]

  @type t :: %__MODULE__{
    :"@odata.type" => String.t,
    :id => String.t | nil,
    :assignments => [MicrosoftGraph.Model.MicrosoftGraphMobileAppAssignment.t] | nil,
    :categories => [MicrosoftGraph.Model.MicrosoftGraphMobileAppCategory.t] | nil,
    :createdDateTime => DateTime.t | nil,
    :description => String.t | nil,
    :developer => String.t | nil,
    :displayName => String.t | nil,
    :informationUrl => String.t | nil,
    :isFeatured => boolean() | nil,
    :largeIcon => MicrosoftGraph.Model.MobileAppLargeIcon.t | nil,
    :lastModifiedDateTime => DateTime.t | nil,
    :notes => String.t | nil,
    :owner => String.t | nil,
    :privacyInformationUrl => String.t | nil,
    :publisher => String.t | nil,
    :publishingState => MicrosoftGraph.Model.MicrosoftGraphMobileAppPublishingState.t | nil,
    :committedContentVersion => String.t | nil,
    :contentVersions => [MicrosoftGraph.Model.MicrosoftGraphMobileAppContent.t] | nil,
    :fileName => String.t | nil,
    :size => integer() | nil,
    :applicableArchitectures => MicrosoftGraph.Model.MicrosoftGraphWindowsArchitecture.t | nil,
    :applicableDeviceTypes => MicrosoftGraph.Model.MicrosoftGraphWindowsDeviceType.t | nil,
    :committedContainedApps => [MicrosoftGraph.Model.MicrosoftGraphMobileContainedApp.t] | nil,
    :identityName => String.t | nil,
    :identityPublisherHash => String.t | nil,
    :identityResourceIdentifier => String.t | nil,
    :identityVersion => String.t | nil,
    :isBundle => boolean() | nil,
    :minimumSupportedOperatingSystem => MicrosoftGraph.Model.MicrosoftGraphWindowsMinimumOperatingSystem.t | nil
  }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
     |> Deserializer.deserialize(:assignments, :list, MicrosoftGraph.Model.MicrosoftGraphMobileAppAssignment)
     |> Deserializer.deserialize(:categories, :list, MicrosoftGraph.Model.MicrosoftGraphMobileAppCategory)
     |> Deserializer.deserialize(:createdDateTime, :datetime, nil)
     |> Deserializer.deserialize(:largeIcon, :struct, MicrosoftGraph.Model.MobileAppLargeIcon)
     |> Deserializer.deserialize(:lastModifiedDateTime, :datetime, nil)
     |> Deserializer.deserialize(:publishingState, :struct, MicrosoftGraph.Model.MicrosoftGraphMobileAppPublishingState)
     |> Deserializer.deserialize(:contentVersions, :list, MicrosoftGraph.Model.MicrosoftGraphMobileAppContent)
     |> Deserializer.deserialize(:applicableArchitectures, :struct, MicrosoftGraph.Model.MicrosoftGraphWindowsArchitecture)
     |> Deserializer.deserialize(:applicableDeviceTypes, :struct, MicrosoftGraph.Model.MicrosoftGraphWindowsDeviceType)
     |> Deserializer.deserialize(:committedContainedApps, :list, MicrosoftGraph.Model.MicrosoftGraphMobileContainedApp)
     |> Deserializer.deserialize(:minimumSupportedOperatingSystem, :struct, MicrosoftGraph.Model.MicrosoftGraphWindowsMinimumOperatingSystem)
  end
end

