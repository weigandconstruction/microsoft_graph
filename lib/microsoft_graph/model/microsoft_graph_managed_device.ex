# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Model.MicrosoftGraphManagedDevice do
  @moduledoc """

  """

  @derive Jason.Encoder
  defstruct [
    :"@odata.type",
    :id,
    :androidSecurityPatchLevel,
    :deviceConfigurationStates,
    :iccid,
    :enrolledDateTime,
    :managedDeviceName,
    :model,
    :windowsProtectionState,
    :physicalMemoryInBytes,
    :users,
    :deviceCompliancePolicyStates,
    :osVersion,
    :easDeviceId,
    :easActivated,
    :exchangeLastSuccessfulSyncDateTime,
    :deviceCategoryDisplayName,
    :ethernetMacAddress,
    :phoneNumber,
    :complianceGracePeriodExpirationDateTime,
    :exchangeAccessStateReason,
    :partnerReportedThreatState,
    :azureADDeviceId,
    :deviceHealthAttestationState,
    :deviceName,
    :deviceCategory,
    :managementCertificateExpirationDate,
    :deviceEnrollmentType,
    :remoteAssistanceSessionUrl,
    :configurationManagerClientEnabledFeatures,
    :managedDeviceOwnerType,
    :complianceState,
    :totalStorageSpaceInBytes,
    :subscriberCarrier,
    :lastSyncDateTime,
    :requireUserEnrollmentApproval,
    :isEncrypted,
    :userDisplayName,
    :imei,
    :userId,
    :activationLockBypassCode,
    :remoteAssistanceSessionErrorDetails,
    :wiFiMacAddress,
    :easActivationDateTime,
    :azureADRegistered,
    :freeStorageSpaceInBytes,
    :manufacturer,
    :notes,
    :emailAddress,
    :udid,
    :serialNumber,
    :deviceRegistrationState,
    :logCollectionRequests,
    :userPrincipalName,
    :isSupervised,
    :jailBroken,
    :managementAgent,
    :deviceActionResults,
    :exchangeAccessState,
    :meid,
    :operatingSystem
  ]

  @type t :: %__MODULE__{
          :"@odata.type" => String.t(),
          :id => String.t() | nil,
          :androidSecurityPatchLevel => String.t() | nil,
          :deviceConfigurationStates =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceConfigurationState.t()] | nil,
          :iccid => String.t() | nil,
          :enrolledDateTime => DateTime.t() | nil,
          :managedDeviceName => String.t() | nil,
          :model => String.t() | nil,
          :windowsProtectionState =>
            MicrosoftGraph.Model.ManagedDeviceWindowsProtectionState.t() | nil,
          :physicalMemoryInBytes => integer() | nil,
          :users => [MicrosoftGraph.Model.MicrosoftGraphUser.t()] | nil,
          :deviceCompliancePolicyStates =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceCompliancePolicyState.t()] | nil,
          :osVersion => String.t() | nil,
          :easDeviceId => String.t() | nil,
          :easActivated => boolean() | nil,
          :exchangeLastSuccessfulSyncDateTime => DateTime.t() | nil,
          :deviceCategoryDisplayName => String.t() | nil,
          :ethernetMacAddress => String.t() | nil,
          :phoneNumber => String.t() | nil,
          :complianceGracePeriodExpirationDateTime => DateTime.t() | nil,
          :exchangeAccessStateReason =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeAccessStateReason.t() | nil,
          :partnerReportedThreatState =>
            MicrosoftGraph.Model.MicrosoftGraphManagedDevicePartnerReportedHealthState.t() | nil,
          :azureADDeviceId => String.t() | nil,
          :deviceHealthAttestationState =>
            MicrosoftGraph.Model.ManagedDeviceDeviceHealthAttestationState.t() | nil,
          :deviceName => String.t() | nil,
          :deviceCategory => MicrosoftGraph.Model.ManagedDeviceDeviceCategory.t() | nil,
          :managementCertificateExpirationDate => DateTime.t() | nil,
          :deviceEnrollmentType =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceEnrollmentType.t() | nil,
          :remoteAssistanceSessionUrl => String.t() | nil,
          :configurationManagerClientEnabledFeatures =>
            MicrosoftGraph.Model.ManagedDeviceConfigurationManagerClientEnabledFeatures.t() | nil,
          :managedDeviceOwnerType =>
            MicrosoftGraph.Model.MicrosoftGraphManagedDeviceOwnerType.t() | nil,
          :complianceState => MicrosoftGraph.Model.MicrosoftGraphComplianceState.t() | nil,
          :totalStorageSpaceInBytes => integer() | nil,
          :subscriberCarrier => String.t() | nil,
          :lastSyncDateTime => DateTime.t() | nil,
          :requireUserEnrollmentApproval => boolean() | nil,
          :isEncrypted => boolean() | nil,
          :userDisplayName => String.t() | nil,
          :imei => String.t() | nil,
          :userId => String.t() | nil,
          :activationLockBypassCode => String.t() | nil,
          :remoteAssistanceSessionErrorDetails => String.t() | nil,
          :wiFiMacAddress => String.t() | nil,
          :easActivationDateTime => DateTime.t() | nil,
          :azureADRegistered => boolean() | nil,
          :freeStorageSpaceInBytes => integer() | nil,
          :manufacturer => String.t() | nil,
          :notes => String.t() | nil,
          :emailAddress => String.t() | nil,
          :udid => String.t() | nil,
          :serialNumber => String.t() | nil,
          :deviceRegistrationState =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceRegistrationState.t() | nil,
          :logCollectionRequests =>
            [MicrosoftGraph.Model.MicrosoftGraphDeviceLogCollectionResponse.t()] | nil,
          :userPrincipalName => String.t() | nil,
          :isSupervised => boolean() | nil,
          :jailBroken => String.t() | nil,
          :managementAgent => MicrosoftGraph.Model.MicrosoftGraphManagementAgentType.t() | nil,
          :deviceActionResults =>
            [MicrosoftGraph.Model.ManagedDeviceDeviceActionResultsInner.t()] | nil,
          :exchangeAccessState =>
            MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeAccessState.t() | nil,
          :meid => String.t() | nil,
          :operatingSystem => String.t() | nil
        }

  alias MicrosoftGraph.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :deviceConfigurationStates,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceConfigurationState
    )
    |> Deserializer.deserialize(:enrolledDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :windowsProtectionState,
      :struct,
      MicrosoftGraph.Model.ManagedDeviceWindowsProtectionState
    )
    |> Deserializer.deserialize(:users, :list, MicrosoftGraph.Model.MicrosoftGraphUser)
    |> Deserializer.deserialize(
      :deviceCompliancePolicyStates,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceCompliancePolicyState
    )
    |> Deserializer.deserialize(:exchangeLastSuccessfulSyncDateTime, :datetime, nil)
    |> Deserializer.deserialize(:complianceGracePeriodExpirationDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :exchangeAccessStateReason,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeAccessStateReason
    )
    |> Deserializer.deserialize(
      :partnerReportedThreatState,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphManagedDevicePartnerReportedHealthState
    )
    |> Deserializer.deserialize(
      :deviceHealthAttestationState,
      :struct,
      MicrosoftGraph.Model.ManagedDeviceDeviceHealthAttestationState
    )
    |> Deserializer.deserialize(
      :deviceCategory,
      :struct,
      MicrosoftGraph.Model.ManagedDeviceDeviceCategory
    )
    |> Deserializer.deserialize(:managementCertificateExpirationDate, :datetime, nil)
    |> Deserializer.deserialize(
      :deviceEnrollmentType,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceEnrollmentType
    )
    |> Deserializer.deserialize(
      :configurationManagerClientEnabledFeatures,
      :struct,
      MicrosoftGraph.Model.ManagedDeviceConfigurationManagerClientEnabledFeatures
    )
    |> Deserializer.deserialize(
      :managedDeviceOwnerType,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphManagedDeviceOwnerType
    )
    |> Deserializer.deserialize(
      :complianceState,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphComplianceState
    )
    |> Deserializer.deserialize(:lastSyncDateTime, :datetime, nil)
    |> Deserializer.deserialize(:easActivationDateTime, :datetime, nil)
    |> Deserializer.deserialize(
      :deviceRegistrationState,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceRegistrationState
    )
    |> Deserializer.deserialize(
      :logCollectionRequests,
      :list,
      MicrosoftGraph.Model.MicrosoftGraphDeviceLogCollectionResponse
    )
    |> Deserializer.deserialize(
      :managementAgent,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphManagementAgentType
    )
    |> Deserializer.deserialize(
      :deviceActionResults,
      :list,
      MicrosoftGraph.Model.ManagedDeviceDeviceActionResultsInner
    )
    |> Deserializer.deserialize(
      :exchangeAccessState,
      :struct,
      MicrosoftGraph.Model.MicrosoftGraphDeviceManagementExchangeAccessState
    )
  end
end
