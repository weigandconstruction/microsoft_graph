# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.DeviceAppManagementMdmWindowsInformationProtectionPolicy do
  @moduledoc """
  API calls for all endpoints tagged `DeviceAppManagementMdmWindowsInformationProtectionPolicy`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Create mdmWindowsInformationProtectionPolicy
  Create a new mdmWindowsInformationProtectionPolicy object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `microsoft_graph_mdm_windows_information_protection_policy` (MicrosoftGraphMdmWindowsInformationProtectionPolicy): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_create_mdm_windows_information_protection_policies(
          Tesla.Env.client(),
          MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_create_mdm_windows_information_protection_policies(
        connection,
        microsoft_graph_mdm_windows_information_protection_policy,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mdmWindowsInformationProtectionPolicies")
      |> add_param(:body, :body, microsoft_graph_mdm_windows_information_protection_policy)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete mdmWindowsInformationProtectionPolicy
  Deletes a mdmWindowsInformationProtectionPolicy.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_delete_mdm_windows_information_protection_policies(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_delete_mdm_windows_information_protection_policies(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get mdmWindowsInformationProtectionPolicy
  Read properties and relationships of the mdmWindowsInformationProtectionPolicy object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_get_mdm_windows_information_protection_policies(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_get_mdm_windows_information_protection_policies(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List mdmWindowsInformationProtectionPolicies
  List properties and relationships of the mdmWindowsInformationProtectionPolicy objects.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicyCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_list_mdm_windows_information_protection_policies(
          Tesla.Env.client(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicyCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_list_mdm_windows_information_protection_policies(
        connection,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/deviceAppManagement/mdmWindowsInformationProtectionPolicies")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicyCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_assignments_get_count12b1(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_assignments_get_count12b1(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/assignments/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create new navigation property to assignments for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `microsoft_graph_targeted_managed_app_policy_assignment` (MicrosoftGraphTargetedManagedAppPolicyAssignment): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_create_assignments(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_create_assignments(
        connection,
        mdm_windows_information_protection_policy_id,
        microsoft_graph_targeted_managed_app_policy_assignment,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/assignments"
      )
      |> add_param(:body, :body, microsoft_graph_targeted_managed_app_policy_assignment)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create new navigation property to exemptAppLockerFiles for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `microsoft_graph_windows_information_protection_app_locker_file` (MicrosoftGraphWindowsInformationProtectionAppLockerFile): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_create_exempt_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_create_exempt_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        microsoft_graph_windows_information_protection_app_locker_file,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/exemptAppLockerFiles"
      )
      |> add_param(:body, :body, microsoft_graph_windows_information_protection_app_locker_file)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create new navigation property to protectedAppLockerFiles for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `microsoft_graph_windows_information_protection_app_locker_file` (MicrosoftGraphWindowsInformationProtectionAppLockerFile): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_create_protected_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_create_protected_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        microsoft_graph_windows_information_protection_app_locker_file,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/protectedAppLockerFiles"
      )
      |> add_param(:body, :body, microsoft_graph_windows_information_protection_app_locker_file)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property assignments for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `targeted_managed_app_policy_assignment_id` (String.t): The unique identifier of targetedManagedAppPolicyAssignment
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_delete_assignments(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_delete_assignments(
        connection,
        mdm_windows_information_protection_policy_id,
        targeted_managed_app_policy_assignment_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/assignments/#{targeted_managed_app_policy_assignment_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property exemptAppLockerFiles for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `windows_information_protection_app_locker_file_id` (String.t): The unique identifier of windowsInformationProtectionAppLockerFile
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_delete_exempt_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_delete_exempt_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        windows_information_protection_app_locker_file_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/exemptAppLockerFiles/#{windows_information_protection_app_locker_file_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property protectedAppLockerFiles for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `windows_information_protection_app_locker_file_id` (String.t): The unique identifier of windowsInformationProtectionAppLockerFile
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_delete_protected_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_delete_protected_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        windows_information_protection_app_locker_file_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/protectedAppLockerFiles/#{windows_information_protection_app_locker_file_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_exempt_app_locker_files_get_count_f6bf(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_exempt_app_locker_files_get_count_f6bf(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/exemptAppLockerFiles/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get assignments from deviceAppManagement
  Navigation property to list of security groups targeted for policy.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `targeted_managed_app_policy_assignment_id` (String.t): The unique identifier of targetedManagedAppPolicyAssignment
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_get_assignments(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_get_assignments(
        connection,
        mdm_windows_information_protection_policy_id,
        targeted_managed_app_policy_assignment_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/assignments/#{targeted_managed_app_policy_assignment_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_get_count_a680(
          Tesla.Env.client(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_get_count_a680(
        connection,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/deviceAppManagement/mdmWindowsInformationProtectionPolicies/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get exemptAppLockerFiles from deviceAppManagement
  Another way to input exempt apps through xml files

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `windows_information_protection_app_locker_file_id` (String.t): The unique identifier of windowsInformationProtectionAppLockerFile
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_get_exempt_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_get_exempt_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        windows_information_protection_app_locker_file_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/exemptAppLockerFiles/#{windows_information_protection_app_locker_file_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get protectedAppLockerFiles from deviceAppManagement
  Another way to input protected apps through xml files

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `windows_information_protection_app_locker_file_id` (String.t): The unique identifier of windowsInformationProtectionAppLockerFile
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_get_protected_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_get_protected_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        windows_information_protection_app_locker_file_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/protectedAppLockerFiles/#{windows_information_protection_app_locker_file_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get assignments from deviceAppManagement
  Navigation property to list of security groups targeted for policy.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignmentCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_list_assignments(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignmentCollectionResponse.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_list_assignments(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/assignments"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignmentCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get exemptAppLockerFiles from deviceAppManagement
  Another way to input exempt apps through xml files

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFileCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_list_exempt_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFileCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_list_exempt_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/exemptAppLockerFiles"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFileCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get protectedAppLockerFiles from deviceAppManagement
  Another way to input protected apps through xml files

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFileCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_list_protected_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFileCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_list_protected_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/protectedAppLockerFiles"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFileCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_protected_app_locker_files_get_count5893(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_protected_app_locker_files_get_count5893(
        connection,
        mdm_windows_information_protection_policy_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/protectedAppLockerFiles/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property assignments in deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `targeted_managed_app_policy_assignment_id` (String.t): The unique identifier of targetedManagedAppPolicyAssignment
  - `microsoft_graph_targeted_managed_app_policy_assignment` (MicrosoftGraphTargetedManagedAppPolicyAssignment): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_update_assignments(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_update_assignments(
        connection,
        mdm_windows_information_protection_policy_id,
        targeted_managed_app_policy_assignment_id,
        microsoft_graph_targeted_managed_app_policy_assignment,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/assignments/#{targeted_managed_app_policy_assignment_id}"
      )
      |> add_param(:body, :body, microsoft_graph_targeted_managed_app_policy_assignment)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphTargetedManagedAppPolicyAssignment},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property exemptAppLockerFiles in deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `windows_information_protection_app_locker_file_id` (String.t): The unique identifier of windowsInformationProtectionAppLockerFile
  - `microsoft_graph_windows_information_protection_app_locker_file` (MicrosoftGraphWindowsInformationProtectionAppLockerFile): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_update_exempt_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_update_exempt_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        windows_information_protection_app_locker_file_id,
        microsoft_graph_windows_information_protection_app_locker_file,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/exemptAppLockerFiles/#{windows_information_protection_app_locker_file_id}"
      )
      |> add_param(:body, :body, microsoft_graph_windows_information_protection_app_locker_file)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property protectedAppLockerFiles in deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `windows_information_protection_app_locker_file_id` (String.t): The unique identifier of windowsInformationProtectionAppLockerFile
  - `microsoft_graph_windows_information_protection_app_locker_file` (MicrosoftGraphWindowsInformationProtectionAppLockerFile): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mdm_windows_information_protection_policies_update_protected_app_locker_files(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mdm_windows_information_protection_policies_update_protected_app_locker_files(
        connection,
        mdm_windows_information_protection_policy_id,
        windows_information_protection_app_locker_file_id,
        microsoft_graph_windows_information_protection_app_locker_file,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}/protectedAppLockerFiles/#{windows_information_protection_app_locker_file_id}"
      )
      |> add_param(:body, :body, microsoft_graph_windows_information_protection_app_locker_file)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphWindowsInformationProtectionAppLockerFile},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update mdmWindowsInformationProtectionPolicy
  Update the properties of a mdmWindowsInformationProtectionPolicy object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mdm_windows_information_protection_policy_id` (String.t): The unique identifier of mdmWindowsInformationProtectionPolicy
  - `microsoft_graph_mdm_windows_information_protection_policy` (MicrosoftGraphMdmWindowsInformationProtectionPolicy): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_update_mdm_windows_information_protection_policies(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_update_mdm_windows_information_protection_policies(
        connection,
        mdm_windows_information_protection_policy_id,
        microsoft_graph_mdm_windows_information_protection_policy,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mdmWindowsInformationProtectionPolicies/#{mdm_windows_information_protection_policy_id}"
      )
      |> add_param(:body, :body, microsoft_graph_mdm_windows_information_protection_policy)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphMdmWindowsInformationProtectionPolicy},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
