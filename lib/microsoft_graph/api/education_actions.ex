# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.EducationActions do
  @moduledoc """
  API calls for all endpoints tagged `EducationActions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke action publish
  Publish an education assignment. Change the state of an educationAssignment from its original draft status to the published status.  You can change the state from draft to scheduled if the assignment is scheduled for a future date.  Only a teacher in the class can make this call. When an assignment is in draft status, students will not see the assignment, nor will there be any submission objects. Calling this API creates educationSubmission objects and displays the assignment in each student's list. The state of the assignment goes back to draft if there is any backend failure during publish process. To update the properties of a published assignment, see update an assignment. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_publish(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_publish(
        connection,
        education_class_id,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/publish"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpFeedbackResourcesFolder
  Create a SharePoint folder to upload feedback files for a given educationSubmission. Only teachers can perform this operation. The teacher determines the resources to upload in the feedback resources folder of a submission. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_set_up_feedback_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_set_up_feedback_resources_folder(
        connection,
        education_class_id,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/setUpFeedbackResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpResourcesFolder
  Create a SharePoint folder to upload files for a given educationAssignment. Only teachers can perform this operation. The teacher determines the resources to upload in the assignment's folder.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_set_up_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_set_up_resources_folder(
        connection,
        education_class_id,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/setUpResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action reassign
  Reassign the submission to the student with feedback for review. Only teachers can perform this action.  Include the Prefer: include-unknown-enum-members header when you call this method; otherwise, a reassigned submission will be treated as a returned submission. This means that the reassigned status will be mapped to the returned status, and reassignedDateTime and reassignedBy properties will be mapped to returnedDateTime and returnedBy respectively. If the header Prefer: include-unknown-enum-members is provided, a reassigned submission retains the reassigned status. For details, see the examples section. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_submissions_education_submission_reassign(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_submissions_education_submission_reassign(
        connection,
        education_class_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/reassign"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action return
  Make the grade and feedback associated with this submission available to the student.  This action changes the status of the submission from 'submitted' to 'returned' and indicates that feedback is provided or grading is done. This action can only be done by the teacher. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_submissions_education_submission_return(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_submissions_education_submission_return(
        connection,
        education_class_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/return"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpResourcesFolder
  Trigger the creation of the SharePoint resource folder where all file-based resources (Word, Excel, and so on) should be uploaded for a given submission. Only teachers and students can perform this operation. Note that files must be located in this folder in order to be added as resources. Only a student in the class can determine what files to upload in a given submission-level resource folder.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_submissions_education_submission_set_up_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_submissions_education_submission_set_up_resources_folder(
        connection,
        education_class_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/setUpResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action submit
  Indicate that a student is done with the work and is ready to hand in the assignment. Only teachers, students, and applications with application permissions can perform this operation. This method changes the status of the submission from working to submitted. During the submit process, all the resources are copied to the submittedResources bucket. The teacher will be looking at the submitted resources list for grading. A teacher can also submit a student's assignment on their behalf. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_submissions_education_submission_submit(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_submissions_education_submission_submit(
        connection,
        education_class_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/submit"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action unsubmit
  Indicate that a student wants to work on the submission of the assignment after it was turned in. Only teachers, students, and applications with application permissions can perform this operation. This method changes the status of the submission from submitted to working. During the submit process, all the resources are copied from submittedResources to  workingResources. The teacher will be looking at the working resources list for grading. A teacher can also unsubmit a student's assignment on their behalf. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_class_id` (String.t): The unique identifier of educationClass
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_classes_education_class_assignments_education_assignment_submissions_education_submission_unsubmit(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_classes_education_class_assignments_education_assignment_submissions_education_submission_unsubmit(
        connection,
        education_class_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/classes/#{education_class_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/unsubmit"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action publish
  Publish an education assignment. Change the state of an educationAssignment from its original draft status to the published status.  You can change the state from draft to scheduled if the assignment is scheduled for a future date.  Only a teacher in the class can make this call. When an assignment is in draft status, students will not see the assignment, nor will there be any submission objects. Calling this API creates educationSubmission objects and displays the assignment in each student's list. The state of the assignment goes back to draft if there is any backend failure during publish process. To update the properties of a published assignment, see update an assignment. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_publish(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_publish(
        connection,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/education/me/assignments/#{education_assignment_id}/publish")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpFeedbackResourcesFolder
  Create a SharePoint folder to upload feedback files for a given educationSubmission. Only teachers can perform this operation. The teacher determines the resources to upload in the feedback resources folder of a submission. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_set_up_feedback_resources_folder(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_set_up_feedback_resources_folder(
        connection,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/education/me/assignments/#{education_assignment_id}/setUpFeedbackResourcesFolder")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpResourcesFolder
  Create a SharePoint folder to upload files for a given educationAssignment. Only teachers can perform this operation. The teacher determines the resources to upload in the assignment's folder.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_set_up_resources_folder(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_set_up_resources_folder(
        connection,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/education/me/assignments/#{education_assignment_id}/setUpResourcesFolder")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action reassign
  Reassign the submission to the student with feedback for review. Only teachers can perform this action.  Include the Prefer: include-unknown-enum-members header when you call this method; otherwise, a reassigned submission will be treated as a returned submission. This means that the reassigned status will be mapped to the returned status, and reassignedDateTime and reassignedBy properties will be mapped to returnedDateTime and returnedBy respectively. If the header Prefer: include-unknown-enum-members is provided, a reassigned submission retains the reassigned status. For details, see the examples section. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_submissions_education_submission_reassign(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_submissions_education_submission_reassign(
        connection,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/me/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/reassign"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action return
  Make the grade and feedback associated with this submission available to the student.  This action changes the status of the submission from 'submitted' to 'returned' and indicates that feedback is provided or grading is done. This action can only be done by the teacher. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_submissions_education_submission_return(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_submissions_education_submission_return(
        connection,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/me/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/return"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpResourcesFolder
  Trigger the creation of the SharePoint resource folder where all file-based resources (Word, Excel, and so on) should be uploaded for a given submission. Only teachers and students can perform this operation. Note that files must be located in this folder in order to be added as resources. Only a student in the class can determine what files to upload in a given submission-level resource folder.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_submissions_education_submission_set_up_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_submissions_education_submission_set_up_resources_folder(
        connection,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/me/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/setUpResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action submit
  Indicate that a student is done with the work and is ready to hand in the assignment. Only teachers, students, and applications with application permissions can perform this operation. This method changes the status of the submission from working to submitted. During the submit process, all the resources are copied to the submittedResources bucket. The teacher will be looking at the submitted resources list for grading. A teacher can also submit a student's assignment on their behalf. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_submissions_education_submission_submit(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_submissions_education_submission_submit(
        connection,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/me/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/submit"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action unsubmit
  Indicate that a student wants to work on the submission of the assignment after it was turned in. Only teachers, students, and applications with application permissions can perform this operation. This method changes the status of the submission from submitted to working. During the submit process, all the resources are copied from submittedResources to  workingResources. The teacher will be looking at the working resources list for grading. A teacher can also unsubmit a student's assignment on their behalf. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_me_assignments_education_assignment_submissions_education_submission_unsubmit(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_me_assignments_education_assignment_submissions_education_submission_unsubmit(
        connection,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/me/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/unsubmit"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action publish
  Publish an education assignment. Change the state of an educationAssignment from its original draft status to the published status.  You can change the state from draft to scheduled if the assignment is scheduled for a future date.  Only a teacher in the class can make this call. When an assignment is in draft status, students will not see the assignment, nor will there be any submission objects. Calling this API creates educationSubmission objects and displays the assignment in each student's list. The state of the assignment goes back to draft if there is any backend failure during publish process. To update the properties of a published assignment, see update an assignment. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_publish(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_publish(
        connection,
        education_user_id,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/publish"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpFeedbackResourcesFolder
  Create a SharePoint folder to upload feedback files for a given educationSubmission. Only teachers can perform this operation. The teacher determines the resources to upload in the feedback resources folder of a submission. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_set_up_feedback_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_set_up_feedback_resources_folder(
        connection,
        education_user_id,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/setUpFeedbackResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpResourcesFolder
  Create a SharePoint folder to upload files for a given educationAssignment. Only teachers can perform this operation. The teacher determines the resources to upload in the assignment's folder.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_set_up_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_set_up_resources_folder(
        connection,
        education_user_id,
        education_assignment_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/setUpResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSetUpFeedbackResourcesFolder2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action reassign
  Reassign the submission to the student with feedback for review. Only teachers can perform this action.  Include the Prefer: include-unknown-enum-members header when you call this method; otherwise, a reassigned submission will be treated as a returned submission. This means that the reassigned status will be mapped to the returned status, and reassignedDateTime and reassignedBy properties will be mapped to returnedDateTime and returnedBy respectively. If the header Prefer: include-unknown-enum-members is provided, a reassigned submission retains the reassigned status. For details, see the examples section. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_submissions_education_submission_reassign(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_submissions_education_submission_reassign(
        connection,
        education_user_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/reassign"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action return
  Make the grade and feedback associated with this submission available to the student.  This action changes the status of the submission from 'submitted' to 'returned' and indicates that feedback is provided or grading is done. This action can only be done by the teacher. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_submissions_education_submission_return(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_submissions_education_submission_return(
        connection,
        education_user_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/return"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUpResourcesFolder
  Trigger the creation of the SharePoint resource folder where all file-based resources (Word, Excel, and so on) should be uploaded for a given submission. Only teachers and students can perform this operation. Note that files must be located in this folder in order to be added as resources. Only a student in the class can determine what files to upload in a given submission-level resource folder.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_submissions_education_submission_set_up_resources_folder(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_submissions_education_submission_set_up_resources_folder(
        connection,
        education_user_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/setUpResourcesFolder"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action submit
  Indicate that a student is done with the work and is ready to hand in the assignment. Only teachers, students, and applications with application permissions can perform this operation. This method changes the status of the submission from working to submitted. During the submit process, all the resources are copied to the submittedResources bucket. The teacher will be looking at the submitted resources list for grading. A teacher can also submit a student's assignment on their behalf. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_submissions_education_submission_submit(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_submissions_education_submission_submit(
        connection,
        education_user_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/submit"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action unsubmit
  Indicate that a student wants to work on the submission of the assignment after it was turned in. Only teachers, students, and applications with application permissions can perform this operation. This method changes the status of the submission from submitted to working. During the submit process, all the resources are copied from submittedResources to  workingResources. The teacher will be looking at the working resources list for grading. A teacher can also unsubmit a student's assignment on their behalf. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `education_user_id` (String.t): The unique identifier of educationUser
  - `education_assignment_id` (String.t): The unique identifier of educationAssignment
  - `education_submission_id` (String.t): The unique identifier of educationSubmission
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec education_users_education_user_assignments_education_assignment_submissions_education_submission_unsubmit(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def education_users_education_user_assignments_education_assignment_submissions_education_submission_unsubmit(
        connection,
        education_user_id,
        education_assignment_id,
        education_submission_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/education/users/#{education_user_id}/assignments/#{education_assignment_id}/submissions/#{education_submission_id}/unsubmit"
      )
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.EducationClassesEducationClassAssignmentsEducationAssignmentSubmissionsEducationSubmissionUnsubmit2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
