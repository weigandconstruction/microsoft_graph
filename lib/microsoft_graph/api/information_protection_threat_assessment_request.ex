# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.InformationProtectionThreatAssessmentRequest do
  @moduledoc """
  API calls for all endpoints tagged `InformationProtectionThreatAssessmentRequest`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Create threatAssessmentRequest
  Create a new threat assessment request. A threat assessment request can be one of the following types: This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `microsoft_graph_threat_assessment_request` (MicrosoftGraphThreatAssessmentRequest): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_create_threat_assessment_requests(Tesla.Env.client, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_create_threat_assessment_requests(connection, microsoft_graph_threat_assessment_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/informationProtection/threatAssessmentRequests")
      |> add_param(:body, :body, microsoft_graph_threat_assessment_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property threatAssessmentRequests for informationProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_delete_threat_assessment_requests(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_delete_threat_assessment_requests(connection, threat_assessment_request_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get threatAssessmentRequest
  Retrieve the properties and relationships of a specified threatAssessmentRequest object. A threat assessment request can be one of the following types: This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_get_threat_assessment_requests(Tesla.Env.client, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_get_threat_assessment_requests(connection, threat_assessment_request_id, opts \\ []) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List threatAssessmentRequests
  Retrieve a list of threatAssessmentRequest objects. A threat assessment request can be one of the following types: This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequestCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_list_threat_assessment_requests(Tesla.Env.client, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequestCollectionResponse.t} | {:error, Tesla.Env.t}
  def information_protection_list_threat_assessment_requests(connection, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/informationProtection/threatAssessmentRequests")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequestCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create new navigation property to results for informationProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `microsoft_graph_threat_assessment_result` (MicrosoftGraphThreatAssessmentResult): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_create_results(Tesla.Env.client, String.t, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_create_results(connection, threat_assessment_request_id, microsoft_graph_threat_assessment_result, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}/results")
      |> add_param(:body, :body, microsoft_graph_threat_assessment_result)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property results for informationProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `threat_assessment_result_id` (String.t): The unique identifier of threatAssessmentResult
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_delete_results(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_delete_results(connection, threat_assessment_request_id, threat_assessment_result_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}/results/#{threat_assessment_result_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_get_count693a(Tesla.Env.client, keyword()) :: {:ok, Integer.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_get_count693a(connection, opts \\ []) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/informationProtection/threatAssessmentRequests/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get results from informationProtection
  A collection of threat assessment results. Read-only. By default, a GET /threatAssessmentRequests/{id} does not return this property unless you apply $expand on it.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `threat_assessment_result_id` (String.t): The unique identifier of threatAssessmentResult
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_get_results(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_get_results(connection, threat_assessment_request_id, threat_assessment_result_id, opts \\ []) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}/results/#{threat_assessment_result_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get results from informationProtection
  A collection of threat assessment results. Read-only. By default, a GET /threatAssessmentRequests/{id} does not return this property unless you apply $expand on it.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResultCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_list_results(Tesla.Env.client, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResultCollectionResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_list_results(connection, threat_assessment_request_id, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}/results")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResultCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_results_get_count6c75(Tesla.Env.client, String.t, keyword()) :: {:ok, Integer.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_results_get_count6c75(connection, threat_assessment_request_id, opts \\ []) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}/results/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property results in informationProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `threat_assessment_result_id` (String.t): The unique identifier of threatAssessmentResult
  - `microsoft_graph_threat_assessment_result` (MicrosoftGraphThreatAssessmentResult): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_threat_assessment_requests_update_results(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_threat_assessment_requests_update_results(connection, threat_assessment_request_id, threat_assessment_result_id, microsoft_graph_threat_assessment_result, _opts \\ []) do
    request =
      %{}
      |> method(:patch)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}/results/#{threat_assessment_result_id}")
      |> add_param(:body, :body, microsoft_graph_threat_assessment_result)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentResult},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property threatAssessmentRequests in informationProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `threat_assessment_request_id` (String.t): The unique identifier of threatAssessmentRequest
  - `microsoft_graph_threat_assessment_request` (MicrosoftGraphThreatAssessmentRequest): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec information_protection_update_threat_assessment_requests(Tesla.Env.client, String.t, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def information_protection_update_threat_assessment_requests(connection, threat_assessment_request_id, microsoft_graph_threat_assessment_request, _opts \\ []) do
    request =
      %{}
      |> method(:patch)
      |> url("/informationProtection/threatAssessmentRequests/#{threat_assessment_request_id}")
      |> add_param(:body, :body, microsoft_graph_threat_assessment_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphThreatAssessmentRequest},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
