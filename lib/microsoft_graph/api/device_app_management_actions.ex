# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.DeviceAppManagementActions do
  @moduledoc """
  API calls for all endpoints tagged `DeviceAppManagementActions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke action targetApps
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_app_policy_id` (String.t): The unique identifier of managedAppPolicy
  - `device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request` (DeviceAppManagementManagedAppRegistrationsManagedAppRegistrationIntendedPoliciesManagedAppPolicyTargetAppsRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_managed_app_policies_managed_app_policy_target_apps(Tesla.Env.client, String.t, MicrosoftGraph.Model.DeviceAppManagementManagedAppRegistrationsManagedAppRegistrationIntendedPoliciesManagedAppPolicyTargetAppsRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_managed_app_policies_managed_app_policy_target_apps(connection, managed_app_policy_id, device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/managedAppPolicies/#{managed_app_policy_id}/targetApps")
      |> add_param(:body, :body, device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action targetApps
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_app_registration_id` (String.t): The unique identifier of managedAppRegistration
  - `managed_app_policy_id` (String.t): The unique identifier of managedAppPolicy
  - `device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request` (DeviceAppManagementManagedAppRegistrationsManagedAppRegistrationIntendedPoliciesManagedAppPolicyTargetAppsRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_managed_app_registrations_managed_app_registration_applied_policies_managed_app_policy_target_apps(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementManagedAppRegistrationsManagedAppRegistrationIntendedPoliciesManagedAppPolicyTargetAppsRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_managed_app_registrations_managed_app_registration_applied_policies_managed_app_policy_target_apps(connection, managed_app_registration_id, managed_app_policy_id, device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/managedAppRegistrations/#{managed_app_registration_id}/appliedPolicies/#{managed_app_policy_id}/targetApps")
      |> add_param(:body, :body, device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action targetApps
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_app_registration_id` (String.t): The unique identifier of managedAppRegistration
  - `managed_app_policy_id` (String.t): The unique identifier of managedAppPolicy
  - `device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request` (DeviceAppManagementManagedAppRegistrationsManagedAppRegistrationIntendedPoliciesManagedAppPolicyTargetAppsRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementManagedAppRegistrationsManagedAppRegistrationIntendedPoliciesManagedAppPolicyTargetAppsRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps(connection, managed_app_registration_id, managed_app_policy_id, device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/managedAppRegistrations/#{managed_app_registration_id}/intendedPolicies/#{managed_app_policy_id}/targetApps")
      |> add_param(:body, :body, device_app_management_managed_app_registrations_managed_app_registration_intended_policies_managed_app_policy_target_apps_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action assign
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_e_book_id` (String.t): The unique identifier of managedEBook
  - `device_app_management_managed_e_books_managed_e_book_assign_request` (DeviceAppManagementManagedEBooksManagedEBookAssignRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_managed_e_books_managed_e_book_assign(Tesla.Env.client, String.t, MicrosoftGraph.Model.DeviceAppManagementManagedEBooksManagedEBookAssignRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_managed_e_books_managed_e_book_assign(connection, managed_e_book_id, device_app_management_managed_e_books_managed_e_book_assign_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/managedEBooks/#{managed_e_book_id}/assign")
      |> add_param(:body, :body, device_app_management_managed_e_books_managed_e_book_assign_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action assign
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `device_app_management_mobile_app_configurations_managed_device_mobile_app_configuration_assign_request` (DeviceAppManagementMobileAppConfigurationsManagedDeviceMobileAppConfigurationAssignRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_managed_device_mobile_app_configuration_assign(Tesla.Env.client, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppConfigurationsManagedDeviceMobileAppConfigurationAssignRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_app_configurations_managed_device_mobile_app_configuration_assign(connection, managed_device_mobile_app_configuration_id, device_app_management_mobile_app_configurations_managed_device_mobile_app_configuration_assign_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assign")
      |> add_param(:body, :body, device_app_management_mobile_app_configurations_managed_device_mobile_app_configuration_assign_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action assign
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `device_app_management_mobile_apps_mobile_app_assign_request` (DeviceAppManagementMobileAppsMobileAppAssignRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_assign(Tesla.Env.client, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppAssignRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_assign(connection, mobile_app_id, device_app_management_mobile_apps_mobile_app_assign_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/assign")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_assign_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.androidLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.androidLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.iosLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.iosLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_dmg_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_dmg_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.macOSDmgApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_dmg_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_dmg_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.macOSDmgApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.macOSLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_mac_os_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.macOSLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.managedAndroidLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.managedAndroidLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.managedIOSLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_ios_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.managedIOSLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_mobile_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_mobile_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.managedMobileLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_mobile_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_managed_mobile_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.managedMobileLobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_win32_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_win32_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.win32LobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_win32_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_win32_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.win32LobApp/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.windowsAppX/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.windowsAppX/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_mobile_msi_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_mobile_msi_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.windowsMobileMSI/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_mobile_msi_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_mobile_msi_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.windowsMobileMSI/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action commit
  Commits a file of a given app.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request` (DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_universal_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_commit(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.DeviceAppManagementMobileAppsMobileAppMicrosoftGraphAndroidLobAppContentVersionsMobileAppContentFilesMobileAppContentFileCommitRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_universal_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_commit(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.windowsUniversalAppX/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/commit")
      |> add_param(:body, :body, device_app_management_mobile_apps_mobile_app_microsoft_graph_android_lob_app_content_versions_mobile_app_content_files_mobile_app_content_file_commit_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action renewUpload
  Renews the SAS URI for an application file upload.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `mobile_app_id` (String.t): The unique identifier of mobileApp
  - `mobile_app_content_id` (String.t): The unique identifier of mobileAppContent
  - `mobile_app_content_file_id` (String.t): The unique identifier of mobileAppContentFile
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_universal_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_mobile_apps_mobile_app_microsoft_graph_windows_universal_app_x_content_versions_mobile_app_content_files_mobile_app_content_file_renew_upload(connection, mobile_app_id, mobile_app_content_id, mobile_app_content_file_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileApps/#{mobile_app_id}/graph.windowsUniversalAppX/contentVersions/#{mobile_app_content_id}/files/#{mobile_app_content_file_id}/renewUpload")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action syncMicrosoftStoreForBusinessApps
  Syncs Intune account with Microsoft Store For Business

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_sync_microsoft_store_for_business_apps(Tesla.Env.client, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_sync_microsoft_store_for_business_apps(connection, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/syncMicrosoftStoreForBusinessApps")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action assign
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `targeted_managed_app_configuration_id` (String.t): The unique identifier of targetedManagedAppConfiguration
  - `device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_assign_request` (DeviceAppManagementTargetedManagedAppConfigurationsTargetedManagedAppConfigurationAssignRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_assign(Tesla.Env.client, String.t, MicrosoftGraph.Model.DeviceAppManagementTargetedManagedAppConfigurationsTargetedManagedAppConfigurationAssignRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_assign(connection, targeted_managed_app_configuration_id, device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_assign_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/targetedManagedAppConfigurations/#{targeted_managed_app_configuration_id}/assign")
      |> add_param(:body, :body, device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_assign_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action targetApps
  Not yet documented

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `targeted_managed_app_configuration_id` (String.t): The unique identifier of targetedManagedAppConfiguration
  - `device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_target_apps_request` (DeviceAppManagementTargetedManagedAppConfigurationsTargetedManagedAppConfigurationTargetAppsRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_target_apps(Tesla.Env.client, String.t, MicrosoftGraph.Model.DeviceAppManagementTargetedManagedAppConfigurationsTargetedManagedAppConfigurationTargetAppsRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_target_apps(connection, targeted_managed_app_configuration_id, device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_target_apps_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/targetedManagedAppConfigurations/#{targeted_managed_app_configuration_id}/targetApps")
      |> add_param(:body, :body, device_app_management_targeted_managed_app_configurations_targeted_managed_app_configuration_target_apps_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action syncLicenses
  Syncs licenses associated with a specific appleVolumePurchaseProgramToken

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `vpp_token_id` (String.t): The unique identifier of vppToken
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.DeviceAppManagementVppTokensVppTokenSyncLicenses2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_vpp_tokens_vpp_token_sync_licenses(Tesla.Env.client, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.DeviceAppManagementVppTokensVppTokenSyncLicenses2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def device_app_management_vpp_tokens_vpp_token_sync_licenses(connection, vpp_token_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/vppTokens/#{vpp_token_id}/syncLicenses")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.DeviceAppManagementVppTokensVppTokenSyncLicenses2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
