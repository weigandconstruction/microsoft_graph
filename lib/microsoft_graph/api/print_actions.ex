# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.PrintActions do
  @moduledoc """
  API calls for all endpoints tagged `PrintActions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke action create
  Create (register) a printer with the Universal Print service. This is a long-running operation and as such, it returns a printerCreateOperation that can be used to track and verify the registration of the printer. For help creating the required Certificate Signing Request (CSR) for creating printer, see the CSR generation code sample. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `print_printers_create_request` (PrintPrintersCreateRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_create(
          Tesla.Env.client(),
          MicrosoftGraph.Model.PrintPrintersCreateRequest.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_create(connection, print_printers_create_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/print/printers/create")
      |> add_param(:body, :body, print_printers_create_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action abort
  Abort a print job. Only applications using application permissions can abort a print job. Aborting a print job will only succeed if there is a printTask in a processing state on the associated print job, started by a trigger that the requesting app created. For details about how to register a task trigger, see Extending Universal Print to support pull printing. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_id` (String.t): The unique identifier of printer
  - `print_job_id` (String.t): The unique identifier of printJob
  - `print_shares_printer_share_jobs_print_job_abort_request` (PrintSharesPrinterShareJobsPrintJobAbortRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_printer_jobs_print_job_abort(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobAbortRequest.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_printer_jobs_print_job_abort(
        connection,
        printer_id,
        print_job_id,
        print_shares_printer_share_jobs_print_job_abort_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/printers/#{printer_id}/jobs/#{print_job_id}/abort")
      |> add_param(:body, :body, print_shares_printer_share_jobs_print_job_abort_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action cancel
  Cancel a print job. Print jobs can be canceled only on behalf of a user, using delegated permissions. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_id` (String.t): The unique identifier of printer
  - `print_job_id` (String.t): The unique identifier of printJob
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_printer_jobs_print_job_cancel(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_printer_jobs_print_job_cancel(
        connection,
        printer_id,
        print_job_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/printers/#{printer_id}/jobs/#{print_job_id}/cancel")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action createUploadSession
  Create an upload session that allows an app to iteratively upload ranges of a binary file linked to the print document. As part of the response, this action returns an upload URL that can be used in subsequent sequential PUT queries. Request headers for each PUT operation can be used to specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_id` (String.t): The unique identifier of printer
  - `print_job_id` (String.t): The unique identifier of printJob
  - `print_document_id` (String.t): The unique identifier of printDocument
  - `print_printers_printer_jobs_print_job_documents_print_document_create_upload_session_request` (PrintPrintersPrinterJobsPrintJobDocumentsPrintDocumentCreateUploadSessionRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.UsersUserEventsEventInstancesEventAttachmentsCreateUploadSession2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_printer_jobs_print_job_documents_print_document_create_upload_session(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobDocumentsPrintDocumentCreateUploadSessionRequest.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.UsersUserEventsEventInstancesEventAttachmentsCreateUploadSession2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_printer_jobs_print_job_documents_print_document_create_upload_session(
        connection,
        printer_id,
        print_job_id,
        print_document_id,
        print_printers_printer_jobs_print_job_documents_print_document_create_upload_session_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/print/printers/#{printer_id}/jobs/#{print_job_id}/documents/#{print_document_id}/createUploadSession"
      )
      |> add_param(
        :body,
        :body,
        print_printers_printer_jobs_print_job_documents_print_document_create_upload_session_request
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.UsersUserEventsEventInstancesEventAttachmentsCreateUploadSession2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action redirect
  Redirect a print job to a different printer. Redirecting a print job will only succeed if there is a printTask in a processing state on the associated print job, started by a trigger that the requesting app created.  For details about how to use this API to add pull printing support to Universal Print, see Extending Universal Print to support pull printing. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_id` (String.t): The unique identifier of printer
  - `print_job_id` (String.t): The unique identifier of printJob
  - `print_shares_printer_share_jobs_print_job_redirect_request` (PrintSharesPrinterShareJobsPrintJobRedirectRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirect2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_printer_jobs_print_job_redirect(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirectRequest.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirect2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_printer_jobs_print_job_redirect(
        connection,
        printer_id,
        print_job_id,
        print_shares_printer_share_jobs_print_job_redirect_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/printers/#{printer_id}/jobs/#{print_job_id}/redirect")
      |> add_param(:body, :body, print_shares_printer_share_jobs_print_job_redirect_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirect2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action start
  Submits the print job to the associated printer or printerShare. It will be printed after any existing pending jobs are completed, aborted, or canceled. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_id` (String.t): The unique identifier of printer
  - `print_job_id` (String.t): The unique identifier of printJob
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobStart2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_printer_jobs_print_job_start(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobStart2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_printer_jobs_print_job_start(
        connection,
        printer_id,
        print_job_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/printers/#{printer_id}/jobs/#{print_job_id}/start")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobStart2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action restoreFactoryDefaults
  Restore a printer's default settings to the values specified by the manufacturer. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_id` (String.t): The unique identifier of printer
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_printers_printer_restore_factory_defaults(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_printers_printer_restore_factory_defaults(connection, printer_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/print/printers/#{printer_id}/restoreFactoryDefaults")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action abort
  Abort a print job. Only applications using application permissions can abort a print job. Aborting a print job will only succeed if there is a printTask in a processing state on the associated print job, started by a trigger that the requesting app created. For details about how to register a task trigger, see Extending Universal Print to support pull printing. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_share_id` (String.t): The unique identifier of printerShare
  - `print_job_id` (String.t): The unique identifier of printJob
  - `print_shares_printer_share_jobs_print_job_abort_request` (PrintSharesPrinterShareJobsPrintJobAbortRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_shares_printer_share_jobs_print_job_abort(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobAbortRequest.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_shares_printer_share_jobs_print_job_abort(
        connection,
        printer_share_id,
        print_job_id,
        print_shares_printer_share_jobs_print_job_abort_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/shares/#{printer_share_id}/jobs/#{print_job_id}/abort")
      |> add_param(:body, :body, print_shares_printer_share_jobs_print_job_abort_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action cancel
  Cancel a print job. Print jobs can be canceled only on behalf of a user, using delegated permissions. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_share_id` (String.t): The unique identifier of printerShare
  - `print_job_id` (String.t): The unique identifier of printJob
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_shares_printer_share_jobs_print_job_cancel(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_shares_printer_share_jobs_print_job_cancel(
        connection,
        printer_share_id,
        print_job_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/shares/#{printer_share_id}/jobs/#{print_job_id}/cancel")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action createUploadSession
  Create an upload session that allows an app to iteratively upload ranges of a binary file linked to the print document. As part of the response, this action returns an upload URL that can be used in subsequent sequential PUT queries. Request headers for each PUT operation can be used to specify the exact range of bytes to be uploaded. This allows transfer to be resumed, in case the network connection is dropped during upload.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_share_id` (String.t): The unique identifier of printerShare
  - `print_job_id` (String.t): The unique identifier of printJob
  - `print_document_id` (String.t): The unique identifier of printDocument
  - `print_printers_printer_jobs_print_job_documents_print_document_create_upload_session_request` (PrintPrintersPrinterJobsPrintJobDocumentsPrintDocumentCreateUploadSessionRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.UsersUserEventsEventInstancesEventAttachmentsCreateUploadSession2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_shares_printer_share_jobs_print_job_documents_print_document_create_upload_session(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobDocumentsPrintDocumentCreateUploadSessionRequest.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.UsersUserEventsEventInstancesEventAttachmentsCreateUploadSession2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_shares_printer_share_jobs_print_job_documents_print_document_create_upload_session(
        connection,
        printer_share_id,
        print_job_id,
        print_document_id,
        print_printers_printer_jobs_print_job_documents_print_document_create_upload_session_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/print/shares/#{printer_share_id}/jobs/#{print_job_id}/documents/#{print_document_id}/createUploadSession"
      )
      |> add_param(
        :body,
        :body,
        print_printers_printer_jobs_print_job_documents_print_document_create_upload_session_request
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.UsersUserEventsEventInstancesEventAttachmentsCreateUploadSession2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action redirect
  Redirect a print job to a different printer. Redirecting a print job will only succeed if there is a printTask in a processing state on the associated print job, started by a trigger that the requesting app created.  For details about how to use this API to add pull printing support to Universal Print, see Extending Universal Print to support pull printing. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_share_id` (String.t): The unique identifier of printerShare
  - `print_job_id` (String.t): The unique identifier of printJob
  - `print_shares_printer_share_jobs_print_job_redirect_request` (PrintSharesPrinterShareJobsPrintJobRedirectRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirect2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_shares_printer_share_jobs_print_job_redirect(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirectRequest.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirect2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def print_shares_printer_share_jobs_print_job_redirect(
        connection,
        printer_share_id,
        print_job_id,
        print_shares_printer_share_jobs_print_job_redirect_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/shares/#{printer_share_id}/jobs/#{print_job_id}/redirect")
      |> add_param(:body, :body, print_shares_printer_share_jobs_print_job_redirect_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.PrintSharesPrinterShareJobsPrintJobRedirect2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action start
  Submits the print job to the associated printer or printerShare. It will be printed after any existing pending jobs are completed, aborted, or canceled. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `printer_share_id` (String.t): The unique identifier of printerShare
  - `print_job_id` (String.t): The unique identifier of printJob
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobStart2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec print_shares_printer_share_jobs_print_job_start(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobStart2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def print_shares_printer_share_jobs_print_job_start(
        connection,
        printer_share_id,
        print_job_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/print/shares/#{printer_share_id}/jobs/#{print_job_id}/start")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.PrintPrintersPrinterJobsPrintJobStart2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
