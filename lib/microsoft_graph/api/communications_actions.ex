# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.CommunicationsActions do
  @moduledoc """
  API calls for all endpoints tagged `CommunicationsActions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke action addLargeGalleryView
  Add the large gallery view to a call.  For details about how to identify a large gallery view participant in a roster so that you can retrieve the relevant data to subscribe to the video feed, see Identify large gallery view participants in a roster. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallAddLargeGalleryView2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_add_large_gallery_view(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.CommunicationsCallsCallAddLargeGalleryView2XxResponse.t} | {:error, Tesla.Env.t}
  def communications_calls_call_add_large_gallery_view(connection, call_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/addLargeGalleryView")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallAddLargeGalleryView2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action answer
  Enable a bot to answer an incoming call. The incoming call request can be an invite from a participant in a group call or a peer-to-peer call. If an invite to a group call is received, the notification will contain the chatInfo and meetingInfo parameters. The bot is expected to answer, reject, or redirect the call before the call times out. The current timeout value is 15 seconds for regular scenarios, and 5 seconds for policy-based recording scenarios. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_answer_request` (CommunicationsCallsCallAnswerRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_answer(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallAnswerRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_answer(connection, call_id, communications_calls_call_answer_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/answer")
      |> add_param(:body, :body, communications_calls_call_answer_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action cancelMediaProcessing
  Cancels processing for any in-progress media operations. Media operations refer to the IVR operations playPrompt and recordResponse, which are by default queued to process in order. The cancelMediaProcessing method cancels any operation that is in-process as well as operations that are queued. For example, this method can be used to clean up the IVR operation queue for a new media operation. However, it will not cancel a subscribeToTone operation because it operates independent of any operation queue. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallCancelMediaProcessing2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_cancel_media_processing(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallCancelMediaProcessing2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_cancel_media_processing(connection, call_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/cancelMediaProcessing")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallCancelMediaProcessing2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action changeScreenSharingRole
  Allow applications to share screen content with the participants of a group call. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_change_screen_sharing_role_request` (CommunicationsCallsCallChangeScreenSharingRoleRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_change_screen_sharing_role(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallChangeScreenSharingRoleRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_change_screen_sharing_role(connection, call_id, communications_calls_call_change_screen_sharing_role_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/changeScreenSharingRole")
      |> add_param(:body, :body, communications_calls_call_change_screen_sharing_role_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action keepAlive
  Make a request to this API every 15 to 45 minutes to ensure that an ongoing call remains active. A call that does not receive this request within 45 minutes is considered inactive and will subsequently end. At least one successful request must be made within 45 minutes of the previous request, or the start of the call. We recommend that you send a request in shorter time intervals (every 15 minutes). Make sure that these requests are successful to prevent the call from timing out and ending. Attempting to send a request to a call that has already ended will result in a 404 Not-Found error. The resources related to the call should be cleaned up on the application side. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_keep_alive(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_keep_alive(connection, call_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/keepAlive")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action mute
  Allows the application to mute itself. This is a server mute, meaning that the server will drop all audio packets for this participant, even if the participant continues to stream audio. For more details about how to handle mute operations, see muteParticipantOperation This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMute2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_mute(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMute2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_mute(connection, call_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/mute")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMute2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action invite
  Delete a specific participant in a call. In some situations, it is appropriate for an application to remove a participant from an active call. This action can be done before or after the participant answers the call. When an active caller is removed, they are immediately dropped from the call with no pre- or post-removal notification. When an invited participant is removed, any outstanding add participant request is canceled.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_participants_invite_request` (CommunicationsCallsCallParticipantsInviteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsInvite2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_participants_invite(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsInviteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsInvite2XxResponse.t} | {:error, Tesla.Env.t}
  def communications_calls_call_participants_invite(connection, call_id, communications_calls_call_participants_invite_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/participants/invite")
      |> add_param(:body, :body, communications_calls_call_participants_invite_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallParticipantsInvite2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action mute
  Mute a specific participant in the call. This is a server mute, meaning that the server will drop all audio packets for this participant, even if the participant continues to stream audio. For more information about how to handle mute operations, see muteParticipantOperation. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `participant_id` (String.t): The unique identifier of participant
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMute2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_participants_participant_mute(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMute2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_participants_participant_mute(connection, call_id, participant_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/participants/#{participant_id}/mute")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMute2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action startHoldMusic
  Put a participant on hold and play music in the background. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `participant_id` (String.t): The unique identifier of participant
  - `communications_calls_call_participants_participant_start_hold_music_request` (CommunicationsCallsCallParticipantsParticipantStartHoldMusicRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStartHoldMusic2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_participants_participant_start_hold_music(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStartHoldMusicRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStartHoldMusic2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_participants_participant_start_hold_music(connection, call_id, participant_id, communications_calls_call_participants_participant_start_hold_music_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/participants/#{participant_id}/startHoldMusic")
      |> add_param(:body, :body, communications_calls_call_participants_participant_start_hold_music_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStartHoldMusic2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action stopHoldMusic
  Reincorporate a participant previously put on hold to the call. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `participant_id` (String.t): The unique identifier of participant
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStopHoldMusic2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_participants_participant_stop_hold_music(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStopHoldMusic2XxResponse.t} | {:error, Tesla.Env.t}
  def communications_calls_call_participants_participant_stop_hold_music(connection, call_id, participant_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/participants/#{participant_id}/stopHoldMusic")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantStopHoldMusic2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action playPrompt
  Play a prompt in the call. For more information about how to handle operations, see commsOperation This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_play_prompt_request` (CommunicationsCallsCallPlayPromptRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallPlayPrompt2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_play_prompt(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallPlayPromptRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallPlayPrompt2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_play_prompt(connection, call_id, communications_calls_call_play_prompt_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/playPrompt")
      |> add_param(:body, :body, communications_calls_call_play_prompt_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallPlayPrompt2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action recordResponse
  Records a short audio response from the caller. A bot can utilize this to capture a voice response from a caller after they are prompted for a response. For further information on how to handle operations, please review commsOperation This action is not intended to record the entire call. The maximum length of recording is 2 minutes. The recording is not saved permanently by the Cloud Communications Platform and is discarded shortly after the call ends. The bot must download the recording promptly after the recording operation finishes by using the recordingLocation value that's given in the completed notification. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_record_response_request` (CommunicationsCallsCallRecordResponseRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallRecordResponse2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_record_response(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallRecordResponseRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallRecordResponse2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_record_response(connection, call_id, communications_calls_call_record_response_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/recordResponse")
      |> add_param(:body, :body, communications_calls_call_record_response_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallRecordResponse2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action redirect
  Redirect an incoming call that hasn't been answered or rejected yet. The terms 'redirecting' and 'forwarding' a call are used interchangeably. The bot is expected to redirect the call before the call times out. The current timeout value is 15 seconds. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_redirect_request` (CommunicationsCallsCallRedirectRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_redirect(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallRedirectRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_redirect(connection, call_id, communications_calls_call_redirect_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/redirect")
      |> add_param(:body, :body, communications_calls_call_redirect_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action reject
  Enable a bot to reject an incoming call. The incoming call request can be an invite from a participant in a group call or a peer-to-peer call. If an invite to a group call is received, the notification will contain the chatInfo and meetingInfo parameters. The bot is expected to answer or reject the call before the call times out. The current timeout value is 15 seconds. This API does not end existing calls that have already been answered. Use delete call to end a call. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_reject_request` (CommunicationsCallsCallRejectRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_reject(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallRejectRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_reject(connection, call_id, communications_calls_call_reject_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/reject")
      |> add_param(:body, :body, communications_calls_call_reject_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action subscribeToTone
  Subscribe to DTMF (dual-tone multi-frequency signaling) which allows you to be notified when the user presses keys on a 'dialpad'. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallSubscribeToTone2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_subscribe_to_tone(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallSubscribeToTone2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_subscribe_to_tone(connection, call_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/subscribeToTone")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallSubscribeToTone2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action transfer
  Transfer an active peer-to-peer call or group call. A consultative transfer means that the transferor can inform the person they want to transfer the call to (the transferee), before the transfer is made. This is opposed to transfering the call directly. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_transfer_request` (CommunicationsCallsCallTransferRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_transfer(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallTransferRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_transfer(connection, call_id, communications_calls_call_transfer_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/transfer")
      |> add_param(:body, :body, communications_calls_call_transfer_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action unmute
  Allow the application to unmute itself. This is a server unmute, meaning that the server will start sending audio packets for this participant to other participants again. For more information about how to handle unmute operations, see unmuteParticipantOperation. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_participants_participant_mute_request` (CommunicationsCallsCallParticipantsParticipantMuteRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallUnmute2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_unmute(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallParticipantsParticipantMuteRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallUnmute2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_unmute(connection, call_id, communications_calls_call_participants_participant_mute_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/unmute")
      |> add_param(:body, :body, communications_calls_call_participants_participant_mute_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallUnmute2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action updateRecordingStatus
  Update the application's recording status associated with a call. This requires the use of the Teams policy-based recording solution. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `call_id` (String.t): The unique identifier of call
  - `communications_calls_call_update_recording_status_request` (CommunicationsCallsCallUpdateRecordingStatusRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CommunicationsCallsCallUpdateRecordingStatus2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_call_update_recording_status(Tesla.Env.client, String.t, MicrosoftGraph.Model.CommunicationsCallsCallUpdateRecordingStatusRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.CommunicationsCallsCallUpdateRecordingStatus2XxResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_call_update_recording_status(connection, call_id, communications_calls_call_update_recording_status_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/#{call_id}/updateRecordingStatus")
      |> add_param(:body, :body, communications_calls_call_update_recording_status_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CommunicationsCallsCallUpdateRecordingStatus2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action logTeleconferenceDeviceQuality
  Log video teleconferencing device quality data. The Cloud Video Interop (CVI) bot represents video teleconferencing (VTC) devices and acts as a back-to-back agent for a VTC device in a conference call. Because a CVI bot is in the middle of the VTC and Microsoft Teams infrastructure as a VTC proxy, it has two media legs. One media leg is between the CVI bot and Teams infrastructure, such as Teams conference server or a Teams client. The other media leg is between the CVI bot and the VTC device.  The third-party partners own the VTC media leg and the Teams infrastructure cannot access the quality data of the third-party call leg.  This method is only for the CVI partners to provide their media quality data. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `communications_calls_log_teleconference_device_quality_request` (CommunicationsCallsLogTeleconferenceDeviceQualityRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_calls_log_teleconference_device_quality(Tesla.Env.client, MicrosoftGraph.Model.CommunicationsCallsLogTeleconferenceDeviceQualityRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_calls_log_teleconference_device_quality(connection, communications_calls_log_teleconference_device_quality_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/calls/logTeleconferenceDeviceQuality")
      |> add_param(:body, :body, communications_calls_log_teleconference_device_quality_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action getPresencesByUserId
  Get the presence information for multiple users. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `directory_role_templates_directory_role_template_check_member_objects_request` (DirectoryRoleTemplatesDirectoryRoleTemplateCheckMemberObjectsRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.CollectionOfPresence.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_get_presences_by_user_id(Tesla.Env.client, MicrosoftGraph.Model.DirectoryRoleTemplatesDirectoryRoleTemplateCheckMemberObjectsRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.CollectionOfPresence.t} | {:error, Tesla.Env.t}
  def communications_get_presences_by_user_id(connection, directory_role_templates_directory_role_template_check_member_objects_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/getPresencesByUserId")
      |> add_param(:body, :body, directory_role_templates_directory_role_template_check_member_objects_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.CollectionOfPresence},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action createOrGet
  Create an onlineMeeting object with a custom specified external ID. If the external ID already exists, this API will return the onlineMeeting object with that external ID.  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `users_user_online_meetings_create_or_get_request` (UsersUserOnlineMeetingsCreateOrGetRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.UsersUserOnlineMeetingsCreateOrGet2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_online_meetings_create_or_get(Tesla.Env.client, MicrosoftGraph.Model.UsersUserOnlineMeetingsCreateOrGetRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.UsersUserOnlineMeetingsCreateOrGet2XxResponse.t} | {:error, Tesla.Env.t}
  def communications_online_meetings_create_or_get(connection, users_user_online_meetings_create_or_get_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/onlineMeetings/createOrGet")
      |> add_param(:body, :body, users_user_online_meetings_create_or_get_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.UsersUserOnlineMeetingsCreateOrGet2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action clearPresence
  Clear the application's presence session for a user. If it is the user's only presence session, the user's presence will change to Offline/Offline. For details about presences sessions, see presence: setPresence. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `presence_id` (String.t): The unique identifier of presence
  - `users_user_presence_clear_presence_request` (UsersUserPresenceClearPresenceRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_presences_presence_clear_presence(Tesla.Env.client, String.t, MicrosoftGraph.Model.UsersUserPresenceClearPresenceRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_presences_presence_clear_presence(connection, presence_id, users_user_presence_clear_presence_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/presences/#{presence_id}/clearPresence")
      |> add_param(:body, :body, users_user_presence_clear_presence_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action clearUserPreferredPresence
  Clear the preferred availability and activity status for a user. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `presence_id` (String.t): The unique identifier of presence
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_presences_presence_clear_user_preferred_presence(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_presences_presence_clear_user_preferred_presence(connection, presence_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/presences/#{presence_id}/clearUserPreferredPresence")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setPresence
  Set the state of a user's presence session as an application. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `presence_id` (String.t): The unique identifier of presence
  - `me_presence_set_presence_request` (MePresenceSetPresenceRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_presences_presence_set_presence(Tesla.Env.client, String.t, MicrosoftGraph.Model.MePresenceSetPresenceRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_presences_presence_set_presence(connection, presence_id, me_presence_set_presence_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/presences/#{presence_id}/setPresence")
      |> add_param(:body, :body, me_presence_set_presence_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setStatusMessage
  Set a presence status message for a user. An optional expiration date and time can be supplied. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `presence_id` (String.t): The unique identifier of presence
  - `me_presence_set_status_message_request` (MePresenceSetStatusMessageRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_presences_presence_set_status_message(Tesla.Env.client, String.t, MicrosoftGraph.Model.MePresenceSetStatusMessageRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_presences_presence_set_status_message(connection, presence_id, me_presence_set_status_message_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/presences/#{presence_id}/setStatusMessage")
      |> add_param(:body, :body, me_presence_set_status_message_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action setUserPreferredPresence
  Set the preferred availability and activity status for a user. If the preferred presence of a user is set, the user's presence shows as the preferred status. Preferred presence takes effect only when at least one presence session exists for the user. Otherwise, the user's presence shows as Offline. A presence session is created as a result of a successful setPresence operation, or if the user is signed in on a Microsoft Teams client. For more details, see presence sessions and time-out and expiration. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `presence_id` (String.t): The unique identifier of presence
  - `me_presence_set_user_preferred_presence_request` (MePresenceSetUserPreferredPresenceRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec communications_presences_presence_set_user_preferred_presence(Tesla.Env.client, String.t, MicrosoftGraph.Model.MePresenceSetUserPreferredPresenceRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def communications_presences_presence_set_user_preferred_presence(connection, presence_id, me_presence_set_user_preferred_presence_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/communications/presences/#{presence_id}/setUserPreferredPresence")
      |> add_param(:body, :body, me_presence_set_user_preferred_presence_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
