# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.ApplicationTemplatesActions do
  @moduledoc """
  API calls for all endpoints tagged `ApplicationTemplatesActions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke action instantiate
  Add an instance of an application from the Microsoft Entra application gallery into your directory. You can also use this API to instantiate non-gallery apps. Use the following ID for the applicationTemplate object: 8adf8e6e-67b2-4cf2-a259-e3dc5476c621. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_template_id` (String.t): The unique identifier of applicationTemplate
  - `application_templates_application_template_instantiate_request` (ApplicationTemplatesApplicationTemplateInstantiateRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.ApplicationTemplatesApplicationTemplateInstantiate2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec application_templates_application_template_instantiate(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.ApplicationTemplatesApplicationTemplateInstantiateRequest.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.ApplicationTemplatesApplicationTemplateInstantiate2XxResponse.t()}
          | {:error, Tesla.Env.t()}
  def application_templates_application_template_instantiate(
        connection,
        application_template_id,
        application_templates_application_template_instantiate_request,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/applicationTemplates/#{application_template_id}/instantiate")
      |> add_param(:body, :body, application_templates_application_template_instantiate_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.ApplicationTemplatesApplicationTemplateInstantiate2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
