# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.DeviceAppManagementManagedDeviceMobileAppConfiguration do
  @moduledoc """
  API calls for all endpoints tagged `DeviceAppManagementManagedDeviceMobileAppConfiguration`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Create iosMobileAppConfiguration
  Create a new iosMobileAppConfiguration object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `microsoft_graph_managed_device_mobile_app_configuration` (MicrosoftGraphManagedDeviceMobileAppConfiguration): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_create_mobile_app_configurations(
          Tesla.Env.client(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_create_mobile_app_configurations(
        connection,
        microsoft_graph_managed_device_mobile_app_configuration,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/deviceAppManagement/mobileAppConfigurations")
      |> add_param(:body, :body, microsoft_graph_managed_device_mobile_app_configuration)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete iosMobileAppConfiguration
  Deletes a iosMobileAppConfiguration.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_delete_mobile_app_configurations(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_delete_mobile_app_configurations(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get managedDeviceMobileAppConfiguration
  Read properties and relationships of the managedDeviceMobileAppConfiguration object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_get_mobile_app_configurations(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_get_mobile_app_configurations(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List iosMobileAppConfigurations
  List properties and relationships of the iosMobileAppConfiguration objects.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_list_mobile_app_configurations(Tesla.Env.client(), keyword()) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_list_mobile_app_configurations(connection, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/deviceAppManagement/mobileAppConfigurations")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_assignments_get_count24db(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_assignments_get_count24db(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assignments/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create managedDeviceMobileAppConfigurationAssignment
  Create a new managedDeviceMobileAppConfigurationAssignment object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `microsoft_graph_managed_device_mobile_app_configuration_assignment` (MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_create_assignments(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_create_assignments(
        connection,
        managed_device_mobile_app_configuration_id,
        microsoft_graph_managed_device_mobile_app_configuration_assignment,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assignments"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_assignment
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create managedDeviceMobileAppConfigurationDeviceStatus
  Create a new managedDeviceMobileAppConfigurationDeviceStatus object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `microsoft_graph_managed_device_mobile_app_configuration_device_status` (MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_create_device_statuses(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_create_device_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        microsoft_graph_managed_device_mobile_app_configuration_device_status,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatuses"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_device_status
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create managedDeviceMobileAppConfigurationUserStatus
  Create a new managedDeviceMobileAppConfigurationUserStatus object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `microsoft_graph_managed_device_mobile_app_configuration_user_status` (MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_create_user_statuses(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_create_user_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        microsoft_graph_managed_device_mobile_app_configuration_user_status,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatuses"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_user_status
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete managedDeviceMobileAppConfigurationAssignment
  Deletes a managedDeviceMobileAppConfigurationAssignment.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_assignment_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationAssignment
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_delete_assignments(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_delete_assignments(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_assignment_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assignments/#{managed_device_mobile_app_configuration_assignment_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property deviceStatusSummary for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_delete_device_status_summary(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_delete_device_status_summary(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatusSummary"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete managedDeviceMobileAppConfigurationDeviceStatus
  Deletes a managedDeviceMobileAppConfigurationDeviceStatus.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_device_status_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_delete_device_statuses(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_delete_device_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_device_status_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatuses/#{managed_device_mobile_app_configuration_device_status_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property userStatusSummary for deviceAppManagement

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_delete_user_status_summary(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_delete_user_status_summary(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatusSummary"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete managedDeviceMobileAppConfigurationUserStatus
  Deletes a managedDeviceMobileAppConfigurationUserStatus.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_user_status_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_delete_user_statuses(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_delete_user_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_user_status_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatuses/#{managed_device_mobile_app_configuration_user_status_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_device_statuses_get_count812c(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_device_statuses_get_count812c(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatuses/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get managedDeviceMobileAppConfigurationAssignment
  Read properties and relationships of the managedDeviceMobileAppConfigurationAssignment object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_assignment_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationAssignment
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_get_assignments(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_get_assignments(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_assignment_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assignments/#{managed_device_mobile_app_configuration_assignment_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_get_count15a7(
          Tesla.Env.client(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_get_count15a7(connection, opts \\ []) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/deviceAppManagement/mobileAppConfigurations/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get managedDeviceMobileAppConfigurationDeviceSummary
  Read properties and relationships of the managedDeviceMobileAppConfigurationDeviceSummary object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_get_device_status_summary(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_get_device_status_summary(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatusSummary"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get managedDeviceMobileAppConfigurationDeviceStatus
  Read properties and relationships of the managedDeviceMobileAppConfigurationDeviceStatus object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_device_status_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_get_device_statuses(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_get_device_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_device_status_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatuses/#{managed_device_mobile_app_configuration_device_status_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get managedDeviceMobileAppConfigurationUserSummary
  Read properties and relationships of the managedDeviceMobileAppConfigurationUserSummary object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_get_user_status_summary(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_get_user_status_summary(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatusSummary"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get managedDeviceMobileAppConfigurationUserStatus
  Read properties and relationships of the managedDeviceMobileAppConfigurationUserStatus object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_user_status_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_get_user_statuses(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_get_user_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_user_status_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatuses/#{managed_device_mobile_app_configuration_user_status_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List managedDeviceMobileAppConfigurationAssignments
  List properties and relationships of the managedDeviceMobileAppConfigurationAssignment objects.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignmentCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_list_assignments(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignmentCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_list_assignments(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assignments"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignmentCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List managedDeviceMobileAppConfigurationDeviceStatuses
  List properties and relationships of the managedDeviceMobileAppConfigurationDeviceStatus objects.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatusCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_list_device_statuses(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatusCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_list_device_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatuses"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatusCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List managedDeviceMobileAppConfigurationUserStatuses
  List properties and relationships of the managedDeviceMobileAppConfigurationUserStatus objects.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatusCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_list_user_statuses(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatusCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_list_user_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatuses"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatusCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update managedDeviceMobileAppConfigurationAssignment
  Update the properties of a managedDeviceMobileAppConfigurationAssignment object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_assignment_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationAssignment
  - `microsoft_graph_managed_device_mobile_app_configuration_assignment` (MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_update_assignments(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_update_assignments(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_assignment_id,
        microsoft_graph_managed_device_mobile_app_configuration_assignment,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/assignments/#{managed_device_mobile_app_configuration_assignment_id}"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_assignment
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationAssignment},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update managedDeviceMobileAppConfigurationDeviceSummary
  Update the properties of a managedDeviceMobileAppConfigurationDeviceSummary object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `microsoft_graph_managed_device_mobile_app_configuration_device_summary` (MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_update_device_status_summary(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_update_device_status_summary(
        connection,
        managed_device_mobile_app_configuration_id,
        microsoft_graph_managed_device_mobile_app_configuration_device_summary,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatusSummary"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_device_summary
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceSummary},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update managedDeviceMobileAppConfigurationDeviceStatus
  Update the properties of a managedDeviceMobileAppConfigurationDeviceStatus object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_device_status_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationDeviceStatus
  - `microsoft_graph_managed_device_mobile_app_configuration_device_status` (MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_update_device_statuses(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_update_device_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_device_status_id,
        microsoft_graph_managed_device_mobile_app_configuration_device_status,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/deviceStatuses/#{managed_device_mobile_app_configuration_device_status_id}"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_device_status
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationDeviceStatus},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update managedDeviceMobileAppConfigurationUserSummary
  Update the properties of a managedDeviceMobileAppConfigurationUserSummary object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `microsoft_graph_managed_device_mobile_app_configuration_user_summary` (MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_update_user_status_summary(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_update_user_status_summary(
        connection,
        managed_device_mobile_app_configuration_id,
        microsoft_graph_managed_device_mobile_app_configuration_user_summary,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatusSummary"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_user_summary
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserSummary},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update managedDeviceMobileAppConfigurationUserStatus
  Update the properties of a managedDeviceMobileAppConfigurationUserStatus object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `managed_device_mobile_app_configuration_user_status_id` (String.t): The unique identifier of managedDeviceMobileAppConfigurationUserStatus
  - `microsoft_graph_managed_device_mobile_app_configuration_user_status` (MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_update_user_statuses(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_update_user_statuses(
        connection,
        managed_device_mobile_app_configuration_id,
        managed_device_mobile_app_configuration_user_status_id,
        microsoft_graph_managed_device_mobile_app_configuration_user_status,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatuses/#{managed_device_mobile_app_configuration_user_status_id}"
      )
      |> add_param(
        :body,
        :body,
        microsoft_graph_managed_device_mobile_app_configuration_user_status
      )
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfigurationUserStatus},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_mobile_app_configurations_user_statuses_get_count_b4b1(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_mobile_app_configurations_user_statuses_get_count_b4b1(
        connection,
        managed_device_mobile_app_configuration_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}/userStatuses/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update iosMobileAppConfiguration
  Update the properties of a iosMobileAppConfiguration object.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `managed_device_mobile_app_configuration_id` (String.t): The unique identifier of managedDeviceMobileAppConfiguration
  - `microsoft_graph_managed_device_mobile_app_configuration` (MicrosoftGraphManagedDeviceMobileAppConfiguration): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec device_app_management_update_mobile_app_configurations(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration.t()}
          | {:error, Tesla.Env.t()}
  def device_app_management_update_mobile_app_configurations(
        connection,
        managed_device_mobile_app_configuration_id,
        microsoft_graph_managed_device_mobile_app_configuration,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/deviceAppManagement/mobileAppConfigurations/#{managed_device_mobile_app_configuration_id}"
      )
      |> add_param(:body, :body, microsoft_graph_managed_device_mobile_app_configuration)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphManagedDeviceMobileAppConfiguration},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
