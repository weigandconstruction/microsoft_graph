# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.PermissionGrantsResourceSpecificPermissionGrant do
  @moduledoc """
  API calls for all endpoints tagged `PermissionGrantsResourceSpecificPermissionGrant`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Add new entity to permissionGrants

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `microsoft_graph_resource_specific_permission_grant` (MicrosoftGraphResourceSpecificPermissionGrant): New entity
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec permission_grants_resource_specific_permission_grant_create_resource_specific_permission_grant(
          Tesla.Env.client(),
          MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def permission_grants_resource_specific_permission_grant_create_resource_specific_permission_grant(
        connection,
        microsoft_graph_resource_specific_permission_grant,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/permissionGrants")
      |> add_param(:body, :body, microsoft_graph_resource_specific_permission_grant)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete entity from permissionGrants

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `resource_specific_permission_grant_id` (String.t): The unique identifier of resourceSpecificPermissionGrant
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec permission_grants_resource_specific_permission_grant_delete_resource_specific_permission_grant(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def permission_grants_resource_specific_permission_grant_delete_resource_specific_permission_grant(
        connection,
        resource_specific_permission_grant_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/permissionGrants/#{resource_specific_permission_grant_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get entity from permissionGrants by key

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `resource_specific_permission_grant_id` (String.t): The unique identifier of resourceSpecificPermissionGrant
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec permission_grants_resource_specific_permission_grant_get_resource_specific_permission_grant(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def permission_grants_resource_specific_permission_grant_get_resource_specific_permission_grant(
        connection,
        resource_specific_permission_grant_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/permissionGrants/#{resource_specific_permission_grant_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get entities from permissionGrants

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrantCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec permission_grants_resource_specific_permission_grant_list_resource_specific_permission_grant(
          Tesla.Env.client(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrantCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def permission_grants_resource_specific_permission_grant_list_resource_specific_permission_grant(
        connection,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/permissionGrants")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrantCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update entity in permissionGrants

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `resource_specific_permission_grant_id` (String.t): The unique identifier of resourceSpecificPermissionGrant
  - `microsoft_graph_resource_specific_permission_grant` (MicrosoftGraphResourceSpecificPermissionGrant): New property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec permission_grants_resource_specific_permission_grant_update_resource_specific_permission_grant(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def permission_grants_resource_specific_permission_grant_update_resource_specific_permission_grant(
        connection,
        resource_specific_permission_grant_id,
        microsoft_graph_resource_specific_permission_grant,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url("/permissionGrants/#{resource_specific_permission_grant_id}")
      |> add_param(:body, :body, microsoft_graph_resource_specific_permission_grant)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphResourceSpecificPermissionGrant},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
