# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.PrivacyFunctions do
  @moduledoc """
  API calls for all endpoints tagged `PrivacyFunctions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke function getFinalAttachment

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `subject_rights_request_id` (String.t): The unique identifier of subjectRightsRequest
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.DeviceManagementReportsGetDevicesWithoutCompliancePolicyReport2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec privacy_subject_rights_requests_subject_rights_request_get_final_attachment(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.DeviceManagementReportsGetDevicesWithoutCompliancePolicyReport2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def privacy_subject_rights_requests_subject_rights_request_get_final_attachment(
        connection,
        subject_rights_request_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url("/privacy/subjectRightsRequests/#{subject_rights_request_id}/getFinalAttachment()")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.DeviceManagementReportsGetDevicesWithoutCompliancePolicyReport2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke function getFinalReport

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `subject_rights_request_id` (String.t): The unique identifier of subjectRightsRequest
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.DeviceManagementReportsGetDevicesWithoutCompliancePolicyReport2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec privacy_subject_rights_requests_subject_rights_request_get_final_report(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.DeviceManagementReportsGetDevicesWithoutCompliancePolicyReport2XxResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def privacy_subject_rights_requests_subject_rights_request_get_final_report(
        connection,
        subject_rights_request_id,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:get)
      |> url("/privacy/subjectRightsRequests/#{subject_rights_request_id}/getFinalReport()")
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.DeviceManagementReportsGetDevicesWithoutCompliancePolicyReport2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
