# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.DirectoryCustomSecurityAttributeDefinition do
  @moduledoc """
  API calls for all endpoints tagged `DirectoryCustomSecurityAttributeDefinition`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Create customSecurityAttributeDefinition
  Create a new customSecurityAttributeDefinition object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `microsoft_graph_custom_security_attribute_definition` (MicrosoftGraphCustomSecurityAttributeDefinition): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_create_custom_security_attribute_definitions(
          Tesla.Env.client(),
          MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t()}
          | {:error, Tesla.Env.t()}
  def directory_create_custom_security_attribute_definitions(
        connection,
        microsoft_graph_custom_security_attribute_definition,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/directory/customSecurityAttributeDefinitions")
      |> add_param(:body, :body, microsoft_graph_custom_security_attribute_definition)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_allowed_values_get_count_c982(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_allowed_values_get_count_c982(
        connection,
        custom_security_attribute_definition_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}/allowedValues/$count"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create allowedValue
  Create a new allowedValue object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `microsoft_graph_allowed_value` (MicrosoftGraphAllowedValue): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_create_allowed_values(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_create_allowed_values(
        connection,
        custom_security_attribute_definition_id,
        microsoft_graph_allowed_value,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}/allowedValues"
      )
      |> add_param(:body, :body, microsoft_graph_allowed_value)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphAllowedValue},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property allowedValues for directory

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `allowed_value_id` (String.t): The unique identifier of allowedValue
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_delete_allowed_values(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_delete_allowed_values(
        connection,
        custom_security_attribute_definition_id,
        allowed_value_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}/allowedValues/#{allowed_value_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get allowedValue
  Read the properties and relationships of an allowedValue object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `allowed_value_id` (String.t): The unique identifier of allowedValue
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_get_allowed_values(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_get_allowed_values(
        connection,
        custom_security_attribute_definition_id,
        allowed_value_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}/allowedValues/#{allowed_value_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphAllowedValue},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_get_count_ae4b(
          Tesla.Env.client(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_get_count_ae4b(connection, opts \\ []) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/directory/customSecurityAttributeDefinitions/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List allowedValues
  Get a list of the allowedValue objects and their properties. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValueCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_list_allowed_values(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValueCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_list_allowed_values(
        connection,
        custom_security_attribute_definition_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}/allowedValues"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphAllowedValueCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update allowedValue
  Update the properties of an allowedValue object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `allowed_value_id` (String.t): The unique identifier of allowedValue
  - `microsoft_graph_allowed_value` (MicrosoftGraphAllowedValue): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_custom_security_attribute_definitions_update_allowed_values(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphAllowedValue.t()}
          | {:error, Tesla.Env.t()}
  def directory_custom_security_attribute_definitions_update_allowed_values(
        connection,
        custom_security_attribute_definition_id,
        allowed_value_id,
        microsoft_graph_allowed_value,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}/allowedValues/#{allowed_value_id}"
      )
      |> add_param(:body, :body, microsoft_graph_allowed_value)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphAllowedValue},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property customSecurityAttributeDefinitions for directory

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_delete_custom_security_attribute_definitions(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def directory_delete_custom_security_attribute_definitions(
        connection,
        custom_security_attribute_definition_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get customSecurityAttributeDefinition
  Read the properties and relationships of a customSecurityAttributeDefinition object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_get_custom_security_attribute_definitions(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t()}
          | {:error, Tesla.Env.t()}
  def directory_get_custom_security_attribute_definitions(
        connection,
        custom_security_attribute_definition_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List customSecurityAttributeDefinitions
  Get a list of the customSecurityAttributeDefinition objects and their properties. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinitionCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_list_custom_security_attribute_definitions(Tesla.Env.client(), keyword()) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok,
             MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinitionCollectionResponse.t()}
          | {:error, Tesla.Env.t()}
  def directory_list_custom_security_attribute_definitions(connection, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/directory/customSecurityAttributeDefinitions")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX",
       MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinitionCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update customSecurityAttributeDefinition
  Update the properties of a customSecurityAttributeDefinition object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `custom_security_attribute_definition_id` (String.t): The unique identifier of customSecurityAttributeDefinition
  - `microsoft_graph_custom_security_attribute_definition` (MicrosoftGraphCustomSecurityAttributeDefinition): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec directory_update_custom_security_attribute_definitions(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition.t()}
          | {:error, Tesla.Env.t()}
  def directory_update_custom_security_attribute_definitions(
        connection,
        custom_security_attribute_definition_id,
        microsoft_graph_custom_security_attribute_definition,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/directory/customSecurityAttributeDefinitions/#{custom_security_attribute_definition_id}"
      )
      |> add_param(:body, :body, microsoft_graph_custom_security_attribute_definition)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphCustomSecurityAttributeDefinition},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
