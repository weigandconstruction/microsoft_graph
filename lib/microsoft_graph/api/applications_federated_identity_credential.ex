# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.ApplicationsFederatedIdentityCredential do
  @moduledoc """
  API calls for all endpoints tagged `ApplicationsFederatedIdentityCredential`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Create federatedIdentityCredential
  Create a new federatedIdentityCredential object for an application. By configuring a trust relationship between your Microsoft Entra application registration and the identity provider for your compute platform, you can use tokens issued by that platform to authenticate with Microsoft identity platform and call APIs in the Microsoft ecosystem. Maximum of 20 objects can be added to an application. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_id` (String.t): The unique identifier of application
  - `microsoft_graph_federated_identity_credential` (MicrosoftGraphFederatedIdentityCredential): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec applications_create_federated_identity_credentials(
          Tesla.Env.client(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t()}
          | {:error, Tesla.Env.t()}
  def applications_create_federated_identity_credentials(
        connection,
        application_id,
        microsoft_graph_federated_identity_credential,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:post)
      |> url("/applications/#{application_id}/federatedIdentityCredentials")
      |> add_param(:body, :body, microsoft_graph_federated_identity_credential)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete federatedIdentityCredential
  Delete a federatedIdentityCredential object from an application. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_id` (String.t): The unique identifier of application
  - `federated_identity_credential_id` (String.t): The unique identifier of federatedIdentityCredential
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec applications_delete_federated_identity_credentials(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, nil}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def applications_delete_federated_identity_credentials(
        connection,
        application_id,
        federated_identity_credential_id,
        opts \\ []
      ) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url(
        "/applications/#{application_id}/federatedIdentityCredentials/#{federated_identity_credential_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_id` (String.t): The unique identifier of application
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec applications_federated_identity_credentials_get_count_d653(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, Integer.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def applications_federated_identity_credentials_get_count_d653(
        connection,
        application_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/applications/#{application_id}/federatedIdentityCredentials/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get federatedIdentityCredential
  Read the properties and relationships of a federatedIdentityCredential object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_id` (String.t): The unique identifier of application
  - `federated_identity_credential_id` (String.t): The unique identifier of federatedIdentityCredential
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec applications_get_federated_identity_credentials(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t()}
          | {:error, Tesla.Env.t()}
  def applications_get_federated_identity_credentials(
        connection,
        application_id,
        federated_identity_credential_id,
        opts \\ []
      ) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url(
        "/applications/#{application_id}/federatedIdentityCredentials/#{federated_identity_credential_id}"
      )
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List federatedIdentityCredentials
  Get a list of the federatedIdentityCredential objects and their properties. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_id` (String.t): The unique identifier of application
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredentialCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec applications_list_federated_identity_credentials(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok,
           MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredentialCollectionResponse.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:error, Tesla.Env.t()}
  def applications_list_federated_identity_credentials(connection, application_id, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/applications/#{application_id}/federatedIdentityCredentials")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredentialCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update federatedIdentityCredential
  Update the properties of a federatedIdentityCredential object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `application_id` (String.t): The unique identifier of application
  - `federated_identity_credential_id` (String.t): The unique identifier of federatedIdentityCredential
  - `microsoft_graph_federated_identity_credential` (MicrosoftGraphFederatedIdentityCredential): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec applications_update_federated_identity_credentials(
          Tesla.Env.client(),
          String.t(),
          String.t(),
          MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t(),
          keyword()
        ) ::
          {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t()}
          | {:ok, MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential.t()}
          | {:error, Tesla.Env.t()}
  def applications_update_federated_identity_credentials(
        connection,
        application_id,
        federated_identity_credential_id,
        microsoft_graph_federated_identity_credential,
        _opts \\ []
      ) do
    request =
      %{}
      |> method(:patch)
      |> url(
        "/applications/#{application_id}/federatedIdentityCredentials/#{federated_identity_credential_id}"
      )
      |> add_param(:body, :body, microsoft_graph_federated_identity_credential)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphFederatedIdentityCredential},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
