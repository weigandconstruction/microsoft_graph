# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.IdentityProtectionRiskyUser do
  @moduledoc """
  API calls for all endpoints tagged `IdentityProtectionRiskyUser`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Create new navigation property to riskyUsers for identityProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `microsoft_graph_risky_user` (MicrosoftGraphRiskyUser): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_create_risky_users(Tesla.Env.client, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t} | {:error, Tesla.Env.t}
  def identity_protection_create_risky_users(connection, microsoft_graph_risky_user, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/identityProtection/riskyUsers")
      |> add_param(:body, :body, microsoft_graph_risky_user)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUser},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property riskyUsers for identityProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_delete_risky_users(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def identity_protection_delete_risky_users(connection, risky_user_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get riskyUser
  Read the properties and relationships of a riskyUser object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_get_risky_users(Tesla.Env.client, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t} | {:error, Tesla.Env.t}
  def identity_protection_get_risky_users(connection, risky_user_id, opts \\ []) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUser},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  List riskyUsers
  Get a list of the riskyUser objects and their properties. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_list_risky_users(Tesla.Env.client, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserCollectionResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def identity_protection_list_risky_users(connection, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/identityProtection/riskyUsers")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUserCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Create new navigation property to history for identityProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `microsoft_graph_risky_user_history_item` (MicrosoftGraphRiskyUserHistoryItem): New navigation property
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_create_history(Tesla.Env.client, String.t, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_create_history(connection, risky_user_id, microsoft_graph_risky_user_history_item, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}/history")
      |> add_param(:body, :body, microsoft_graph_risky_user_history_item)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Delete navigation property history for identityProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `risky_user_history_item_id` (String.t): The unique identifier of riskyUserHistoryItem
  - `opts` (keyword): Optional parameters
    - `:"If-Match"` (String.t): ETag

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_delete_history(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_delete_history(connection, risky_user_id, risky_user_history_item_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers
    }

    request =
      %{}
      |> method(:delete)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}/history/#{risky_user_history_item_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_get_count2b7d(Tesla.Env.client, keyword()) :: {:ok, Integer.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_get_count2b7d(connection, opts \\ []) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/identityProtection/riskyUsers/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get history from identityProtection
  The activity related to user risk level change

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `risky_user_history_item_id` (String.t): The unique identifier of riskyUserHistoryItem
  - `opts` (keyword): Optional parameters
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_get_history(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_get_history(connection, risky_user_id, risky_user_history_item_id, opts \\ []) do
    optional_params = %{
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}/history/#{risky_user_history_item_id}")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get the number of the resource

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `opts` (keyword): Optional parameters
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values

  ### Returns

  - `{:ok, integer()}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_history_get_count33a2(Tesla.Env.client, String.t, keyword()) :: {:ok, Integer.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_history_get_count33a2(connection, risky_user_id, opts \\ []) do
    optional_params = %{
      :"$search" => :query,
      :"$filter" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}/history/$count")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Get history
  Read the properties and relationships of a riskyUserHistoryItem object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `opts` (keyword): Optional parameters
    - `:"$top"` (integer()): Show only the first n items
    - `:"$skip"` (integer()): Skip the first n items
    - `:"$search"` (String.t): Search items by search phrases
    - `:"$filter"` (String.t): Filter items by property values
    - `:"$count"` (boolean()): Include count of items
    - `:"$orderby"` ([String.t]): Order items by property values
    - `:"$select"` ([String.t]): Select properties to be returned
    - `:"$expand"` ([String.t]): Expand related entities

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItemCollectionResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_list_history(Tesla.Env.client, String.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItemCollectionResponse.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_list_history(connection, risky_user_id, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skip" => :query,
      :"$search" => :query,
      :"$filter" => :query,
      :"$count" => :query,
      :"$orderby" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}/history")
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItemCollectionResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property history in identityProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `risky_user_history_item_id` (String.t): The unique identifier of riskyUserHistoryItem
  - `microsoft_graph_risky_user_history_item` (MicrosoftGraphRiskyUserHistoryItem): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_risky_users_update_history(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem.t} | {:error, Tesla.Env.t}
  def identity_protection_risky_users_update_history(connection, risky_user_id, risky_user_history_item_id, microsoft_graph_risky_user_history_item, _opts \\ []) do
    request =
      %{}
      |> method(:patch)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}/history/#{risky_user_history_item_id}")
      |> add_param(:body, :body, microsoft_graph_risky_user_history_item)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUserHistoryItem},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Update the navigation property riskyUsers in identityProtection

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `risky_user_id` (String.t): The unique identifier of riskyUser
  - `microsoft_graph_risky_user` (MicrosoftGraphRiskyUser): New navigation property values
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec identity_protection_update_risky_users(Tesla.Env.client, String.t, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.MicrosoftGraphRiskyUser.t} | {:error, Tesla.Env.t}
  def identity_protection_update_risky_users(connection, risky_user_id, microsoft_graph_risky_user, _opts \\ []) do
    request =
      %{}
      |> method(:patch)
      |> url("/identityProtection/riskyUsers/#{risky_user_id}")
      |> add_param(:body, :body, microsoft_graph_risky_user)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.MicrosoftGraphRiskyUser},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
