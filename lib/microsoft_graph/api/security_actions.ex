# NOTE: This file is auto generated by OpenAPI Generator 7.0.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MicrosoftGraph.Api.SecurityActions do
  @moduledoc """
  API calls for all endpoints tagged `SecurityActions`.
  """

  alias MicrosoftGraph.Connection
  import MicrosoftGraph.RequestBuilder

  @doc """
  Invoke action close
  Close an eDiscovery case. For details, see Close a case. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_close(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_close(connection, ediscovery_case_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/microsoft.graph.security.close")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action applyHold

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_apply_hold(Tesla.Env.client, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_apply_hold(connection, ediscovery_case_id, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/microsoft.graph.security.applyHold")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action activate
  Activate a custodian that has been released from a case to make them part of the case again. For details, see Manage custodians in an eDiscovery (Premium) case. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_custodian_id` (String.t): The unique identifier of ediscoveryCustodian
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_activate(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_activate(connection, ediscovery_case_id, ediscovery_custodian_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/#{ediscovery_custodian_id}/microsoft.graph.security.activate")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action applyHold
  Start the process of applying hold on eDiscovery custodians. After the operation is created, you can get the status by retrieving the Location parameter from the response headers. The location provides a URL that will return an eDiscoveryHoldOperation object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_custodian_id` (String.t): The unique identifier of ediscoveryCustodian
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_apply_hold(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_apply_hold(connection, ediscovery_case_id, ediscovery_custodian_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/#{ediscovery_custodian_id}/microsoft.graph.security.applyHold")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action release
  Release a custodian from a case. For details, see Release a custodian from a case. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_custodian_id` (String.t): The unique identifier of ediscoveryCustodian
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_release(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_release(connection, ediscovery_case_id, ediscovery_custodian_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/#{ediscovery_custodian_id}/microsoft.graph.security.release")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action removeHold
  Start the process of removing hold from eDiscovery custodians. After the operation is created, you can get the status by retrieving the Location parameter from the response headers. The location provides a URL that will return an eDiscoveryHoldOperation object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_custodian_id` (String.t): The unique identifier of ediscoveryCustodian
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_remove_hold(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_remove_hold(connection, ediscovery_case_id, ediscovery_custodian_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/#{ediscovery_custodian_id}/microsoft.graph.security.removeHold")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action updateIndex
  Trigger an indexOperation to make a custodian and associated sources searchable. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_custodian_id` (String.t): The unique identifier of ediscoveryCustodian
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_update_index(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_ediscovery_custodian_update_index(connection, ediscovery_case_id, ediscovery_custodian_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/#{ediscovery_custodian_id}/microsoft.graph.security.updateIndex")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action removeHold

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_custodians_remove_hold(Tesla.Env.client, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_custodians_remove_hold(connection, ediscovery_case_id, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/custodians/microsoft.graph.security.removeHold")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action applyHold

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold(Tesla.Env.client, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold(connection, ediscovery_case_id, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/noncustodialDataSources/microsoft.graph.security.applyHold")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action applyHold
  Start the process of applying hold on eDiscovery non-custodial data sources. After the operation is created, you can get the status by retrieving the Location parameter from the response headers. The location provides a URL that returns an eDiscoveryHoldOperation object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_noncustodial_data_source_id` (String.t): The unique identifier of ediscoveryNoncustodialDataSource
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_apply_hold(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_apply_hold(connection, ediscovery_case_id, ediscovery_noncustodial_data_source_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/noncustodialDataSources/#{ediscovery_noncustodial_data_source_id}/microsoft.graph.security.applyHold")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action release
  Release the non-custodial data source from the case. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_noncustodial_data_source_id` (String.t): The unique identifier of ediscoveryNoncustodialDataSource
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_release(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_release(connection, ediscovery_case_id, ediscovery_noncustodial_data_source_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/noncustodialDataSources/#{ediscovery_noncustodial_data_source_id}/microsoft.graph.security.release")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action removeHold
  Start the process of removing hold from eDiscovery non-custodial data sources. After the operation is created, you can get the status by retrieving the Location parameter from the response headers. The location provides a URL that returns an eDiscoveryHoldOperation object. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_noncustodial_data_source_id` (String.t): The unique identifier of ediscoveryNoncustodialDataSource
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_remove_hold(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_remove_hold(connection, ediscovery_case_id, ediscovery_noncustodial_data_source_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/noncustodialDataSources/#{ediscovery_noncustodial_data_source_id}/microsoft.graph.security.removeHold")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action updateIndex
  Trigger an indexOperation to make a non-custodial data source and its associated data source searchable. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_noncustodial_data_source_id` (String.t): The unique identifier of ediscoveryNoncustodialDataSource
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_update_index(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_ediscovery_noncustodial_data_source_update_index(connection, ediscovery_case_id, ediscovery_noncustodial_data_source_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/noncustodialDataSources/#{ediscovery_noncustodial_data_source_id}/microsoft.graph.security.updateIndex")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action removeHold

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_remove_hold(Tesla.Env.client, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseNoncustodialDataSourcesApplyHoldRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_remove_hold(connection, ediscovery_case_id, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/noncustodialDataSources/microsoft.graph.security.removeHold")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_noncustodial_data_sources_apply_hold_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action reopen
  Reopen an eDiscovery case that was closed. For details, see Reopen a closed case. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_reopen(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_reopen(connection, ediscovery_case_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/microsoft.graph.security.reopen")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action addToReviewSet
  Start the process of adding a collection from Microsoft 365 services to a review set. After the operation is created, you can get the status of the operation by retrieving the Location parameter from the response headers. The location provides a URL that will return a Add to review set operation. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_review_set_id` (String.t): The unique identifier of ediscoveryReviewSet
  - `security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_add_to_review_set_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetAddToReviewSetRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_add_to_review_set(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetAddToReviewSetRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_add_to_review_set(connection, ediscovery_case_id, ediscovery_review_set_id, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_add_to_review_set_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/reviewSets/#{ediscovery_review_set_id}/microsoft.graph.security.addToReviewSet")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_add_to_review_set_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action export
  Initiate an export from a ediscoveryReviewSet. For details, see Export documents from a review set in eDiscovery (Premium). This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_review_set_id` (String.t): The unique identifier of ediscoveryReviewSet
  - `security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetExportRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetExportRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export(connection, ediscovery_case_id, ediscovery_review_set_id, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/reviewSets/#{ediscovery_review_set_id}/microsoft.graph.security.export")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action applyTags
  Apply tags to files in an eDiscovery review set. For details, see Tag documents in a review set in eDiscovery. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_review_set_id` (String.t): The unique identifier of ediscoveryReviewSet
  - `ediscovery_review_set_query_id` (String.t): The unique identifier of ediscoveryReviewSetQuery
  - `security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_apply_tags_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetQueriesEdiscoveryReviewSetQueryApplyTagsRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_apply_tags(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetQueriesEdiscoveryReviewSetQueryApplyTagsRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_apply_tags(connection, ediscovery_case_id, ediscovery_review_set_id, ediscovery_review_set_query_id, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_apply_tags_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/reviewSets/#{ediscovery_review_set_id}/queries/#{ediscovery_review_set_query_id}/microsoft.graph.security.applyTags")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_apply_tags_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action export
  Initiate an export from a ediscoveryReviewSetQuery. For details, see Export documents from a review set in eDiscovery (Premium). This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_review_set_id` (String.t): The unique identifier of ediscoveryReviewSet
  - `ediscovery_review_set_query_id` (String.t): The unique identifier of ediscoveryReviewSetQuery
  - `security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetExportRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_export(Tesla.Env.client, String.t, String.t, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseReviewSetsEdiscoveryReviewSetExportRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_queries_ediscovery_review_set_query_export(connection, ediscovery_case_id, ediscovery_review_set_id, ediscovery_review_set_query_id, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/reviewSets/#{ediscovery_review_set_id}/queries/#{ediscovery_review_set_query_id}/microsoft.graph.security.export")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_review_sets_ediscovery_review_set_export_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action estimateStatistics
  Run an estimate of the number of emails and documents in the eDiscovery search. To learn more about searches in eDiscovery, see Collect data for a case in eDiscovery (Premium). This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_search_id` (String.t): The unique identifier of ediscoverySearch
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_estimate_statistics(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_estimate_statistics(connection, ediscovery_case_id, ediscovery_search_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/searches/#{ediscovery_search_id}/microsoft.graph.security.estimateStatistics")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action purgeData
  Delete Microsoft Teams messages contained in an eDiscovery search. You can collect and purge the following categories of Teams content: - Teams 1:1 chats - Chat messages, posts, and attachments shared in a Teams conversation between two people. Teams 1:1 chats are also called *conversations*. - Teams group chats - Chat messages, posts, and attachments shared in a Teams conversation between three or more people. Also called *1:N* chats or *group conversations*. - Teams channels - Chat messages, posts, replies, and attachments shared in a standard Teams channel. - Private channels - Message posts, replies, and attachments shared in a private Teams channel. - Shared channels - Message posts, replies, and attachments shared in a shared Teams channel. For more information about purging Teams messages, see: - eDiscovery solution series: Data spillage scenario - Search and purge - eDiscovery (Premium) workflow for content in Microsoft Teams  This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `ediscovery_search_id` (String.t): The unique identifier of ediscoverySearch
  - `security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_purge_data_request` (SecurityCasesEdiscoveryCasesEdiscoveryCaseSearchesEdiscoverySearchPurgeDataRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_purge_data(Tesla.Env.client, String.t, String.t, MicrosoftGraph.Model.SecurityCasesEdiscoveryCasesEdiscoveryCaseSearchesEdiscoverySearchPurgeDataRequest.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_purge_data(connection, ediscovery_case_id, ediscovery_search_id, security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_purge_data_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/searches/#{ediscovery_search_id}/microsoft.graph.security.purgeData")
      |> add_param(:body, :body, security_cases_ediscovery_cases_ediscovery_case_searches_ediscovery_search_purge_data_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action resetToDefault
  Reset a caseSettings object to the default values. This API is available in the following national cloud deployments.

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `ediscovery_case_id` (String.t): The unique identifier of ediscoveryCase
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_cases_ediscovery_cases_ediscovery_case_settings_reset_to_default(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:error, Tesla.Env.t}
  def security_cases_ediscovery_cases_ediscovery_case_settings_reset_to_default(connection, ediscovery_case_id, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/cases/ediscoveryCases/#{ediscovery_case_id}/settings/microsoft.graph.security.resetToDefault")
      |> ensure_body()
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end

  @doc """
  Invoke action runHuntingQuery

  ### Parameters

  - `connection` (MicrosoftGraph.Connection): Connection to server
  - `security_run_hunting_query_request` (SecurityRunHuntingQueryRequest): Action parameters
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, MicrosoftGraph.Model.SecurityRunHuntingQuery2XxResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec security_run_hunting_query(Tesla.Env.client, MicrosoftGraph.Model.SecurityRunHuntingQueryRequest.t, keyword()) :: {:ok, MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError.t} | {:ok, MicrosoftGraph.Model.SecurityRunHuntingQuery2XxResponse.t} | {:error, Tesla.Env.t}
  def security_run_hunting_query(connection, security_run_hunting_query_request, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/security/microsoft.graph.security.runHuntingQuery")
      |> add_param(:body, :body, security_run_hunting_query_request)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {"2XX", MicrosoftGraph.Model.SecurityRunHuntingQuery2XxResponse},
      {"4XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError},
      {"5XX", MicrosoftGraph.Model.MicrosoftGraphODataErrorsODataError}
    ])
  end
end
